{"version":3,"sources":["components/Events/EventItemPopover.js","components/Events/DnDTypes.js","components/Events/EventItem.js","components/Events/DnDSource.js","components/Scheduler/Util.js","components/Calendar/CalendarTypes.js","components/Events/DnDContext.js","components/Resources/ResourceView.js","components/Calendar/HeaderView.js","components/Calendar/BodyView.js","components/Events/AddMore.js","components/Calendar/SelectedArea.js","components/Events/ResourceEvents.js","components/Calendar/CellUnits.js","components/Events/AddMorePopover.js","components/Scheduler/config.js","components/Scheduler/behaviors.js","components/Scheduler/SchedulerData.js","components/Events/DemoData.js","components/Scheduler/Scheduler.js","components/Events/withDnDContext.js","App.js","serviceWorker.js","index.js"],"names":["EventItemPopover","props","this","schedulerData","eventItem","title","startTime","endTime","statusColor","subtitleGetter","viewEventClick","viewEventText","viewEvent2Click","viewEvent2Text","eventItemPopoverTemplateResolver","localeMoment","config","start","end","undefined","subtitleRow","subtitle","type","align","span","className","opsRow","clickable1","clickable2","col","style","color","cursor","onClick","marginLeft","dateFormat","eventItemPopoverDateFormat","width","backgroundColor","format","Component","DnDTypes","supportTouch","window","EventItem","initStartDrag","ev","slotId","_getEventSlotId","slot","getSlotById","groupOnly","_isResizing","stopPropagation","clientX","changedTouches","length","pageX","buttons","setState","startX","_startResizing","startResizer","addEventListener","doStartDrag","stopStartDrag","cancelStartDrag","document","documentElement","onselectstart","ondragstart","left","leftIndex","rightIndex","cellWidth","getContentCellWidth","offset","minWidth","maxWidth","state","newLeft","newWidth","removeEventListener","top","updateEventStart","conflictOccurred","_stopResizing","cellUnit","events","deltaX","sign","count","Math","floor","abs","ceil","newStart","add","CellUnits","Hour","minuteStep","DATETIME_FORMAT","displayWeekend","tempCount","i","tempStart","dayOfWeek","weekday","hasConflict","slotName","name","checkConflict","forEach","e","id","eStart","eEnd","console","log","subscribeResizeEvent","initEndDrag","endX","endResizer","doEndDrag","stopEndDrag","cancelEndDrag","headers","updateEventEnd","newEnd","tempEnd","startResizable","isInPopover","resizable","endResizable","np","isStart","isEnd","eventItemClick","isDragging","connectDragSource","connectDragPreview","eventItemTemplateResolver","roundCls","bgColor","defaultEventBgColor","titleText","behaviors","getEventTextFunc","content","eventTitle","startResizeDiv","ref","endResizeDiv","eventItemTemplate","key","height","eventItemHeight","lineHeight","a","eventItemPopoverEnabled","showPopover","placement","trigger","DnDSource","resolveDragObjFunc","DecoratedComponent","dndType","getDragSpec","beginDrag","monitor","component","endDrag","didDrop","moveEvent","newEvent","viewType","item","getItem","getItemType","dropResult","getDropResult","initialStart","action","initialEnd","isEvent","event","relativeMove","diff","CalendarTypes","Day","tmpMoment","year","month","date","crossResourceMove","canDrag","resourceEvents","movable","getDragCollect","connect","dragSource","dragPreview","getDragSource","DragSource","getPos","element","x","y","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","Week","DnDContext","sources","getDropSpec","drop","pos","eventContainer","initialStartTime","initialEndTime","initialPoint","getInitialClientOffset","initialLeftIndex","headerItems","hour","minute","second","point","getClientOffset","hover","movingEvent","canDrop","getDropCollect","connectDropTarget","dropTarget","isOver","getDropTarget","DropTarget","sourceMap","keys","getDndSource","get","Map","set","ResourceView","contentScrollbarHeight","slotClickedFunc","slotItemTemplateResolver","toggleExpandFunc","renderData","getResourceTableWidth","paddingBottom","resourceList","filter","o","render","map","indents","indent","push","hasChildren","expanded","slotItem","textAlign","temp","tdStyle","rowHeight","groupOnlySlotColor","data-resource-id","HeaderView","nonAgendaCellHeaderTemplateResolver","headerHeight","getTableHeaderHeight","minuteStepsInHour","getMinuteStepsInHour","headerList","index","datetime","time","isSame","Date","nonWorkingTime","nonWorkingTimeHeadColor","nonWorkingTimeHeadBgColor","pFormattedList","nonAgendaDayCellHeaderFormat","split","pList","nonAgendaOtherCellHeaderFormat","BodyView","tableRows","rowCells","header","nonWorkingTimeBodyBgColor","getNonAgendaViewBodyCellBgColorFunc","cellBgColor","AddMore","number","clickAction","headerItem","SelectedArea","bottom","selectedAreaColor","ResourceEvents","initDrag","isSelecting","srcElement","target","doDrag","stopDrag","cancelDrag","currentX","min","max","onAddMoreClick","onSetAddMoreState","indexOf","eventItemLineHeight","eventContainerRef","creatable","dndSource","startDate","endDate","cellMaxEvents","getCellMaxEvents","rowWidth","getContentTableWidth","DnDEventItem","selectedArea","eventList","summary","renderEventsMaxIndex","addMore","addMoreIndex","evt","idx","durationStart","durationEnd","dayStartFrom","dayStopTo","addMoreItem","schedulerWidth","besidesWidth","schedulerMaxHeight","tableHeaderHeight","agendaResourceTableWidth","agendaMaxEventWidth","dayResourceTableWidth","weekResourceTableWidth","monthResourceTableWidth","quarterResourceTableWidth","yearResourceTableWidth","customResourceTableWidth","dayCellWidth","weekCellWidth","monthCellWidth","quarterCellWidth","yearCellWidth","customCellWidth","dayMaxEvents","weekMaxEvents","monthMaxEvents","quarterMaxEvents","yearMaxEvents","customMaxEvents","nonAgendaSlotMinHeight","summaryColor","scrollToSpecialMomentEnabled","calendarPopoverEnabled","recurringEventsEnabled","headerEnabled","defaultExpanded","resourceName","taskName","agendaViewHeader","addMorePopoverHeaderFormat","views","viewName","showAgenda","isEventPerspective","getSummaryFunc","getCustomDateFunc","getScrollSpecialMomentFunc","startMoment","endMoment","getDateLabelFunc","dateLabel","Custom","Custom1","Custom2","Month","Quarter","Year","eventText","resources","resourceId","isNonWorkingTimeFunc","SchedulerData","moment","DATE_FORMAT","newConfig","newBehaviors","eventGroups","eventGroupsAutoGenerated","resizing","scrollToSpecialMoment","documentWidth","_validateMinuteStep","_resolveDate","_createHeaders","_createRenderData","_validateResource","Array","from","Set","setScrollToSpecialMoment","autoGenerated","_validateEventGroups","resource","eventGroup","eventGroupId","splice","_validateEvents","_generateEventGroups","startOf","endOf","selectDate","now","newSchedulerMaxHeight","endsWith","slotEntered","slotIndent","isExpanded","expandedMap","expandStatus","resourceTableWidth","getResourceTableConfigWidth","contentCellWidth","getContentCellConfigWidth","baseWidth","isSchedulerResponsive","parseInt","Number","slice","resourceTableConfigWidth","getSchedulerWidth","isResourceViewResponsive","contentCellConfigWidth","isContentViewResponsive","slots","getSlots","_attachEvent","_detachEvent","newSlotId","newSlotName","groupId","groupName","eventStart","eventEnd","windowStart","windowEnd","eventId","recurringEvents","rrule","oldStart","oldEnd","rule","rrulestr","oldDtstart","oldUntil","origOptions","until","toDate","dtstart","toString","exdates","exrule","rruleSet","RRuleSet","exdate","all","recurringEventId","recurringEventStart","recurringEventEnd","tzid","utc","utcOffset","isEventInTimeWindow","num","Error","customDate","minuteSteps","startValue","endValue","_getEventGroupId","_getEventGroupName","has","slotTree","slotMap","headerEvents","_createInitHeaderEvents","slotRenderData","parentId","hasSummary","rowMaxCount","value","data","children","parentValue","slotStack","initRenderData","currentNode","pop","spanStart","spanEnd","Object","prototype","call","error","event1","event2","start1","start2","end1","end2","_createInitRenderData","cellMaxEventsCount","resourceEventsList","_getSpan","headerStart","newRowHeight","tmp","previousHeader","previousHeaderStart","_createHeaderEvent","renderItemsCount","text","DemoData","eventsForTaskView","eventsForCustomEventStyle","RadioButton","Radio","Button","RadioGroup","Group","Scheduler","onWindowResize","_setDocumentWidth","clientWidth","documentHeight","clientHeight","resolveScrollbarSize","contentScrollbarWidth","resourceScrollbarHeight","resourceScrollbarWidth","contentHeight","getSchedulerContentDesiredHeight","schedulerContent","offsetHeight","offsetWidth","schedulerResource","schedulerContentBgTable","tmpState","needSet","schedulerHeadRef","schedulerHead","onSchedulerHeadMouseOver","currentArea","onSchedulerHeadMouseOut","onSchedulerHeadScroll","proxy","schedulerResourceRef","onSchedulerResourceMouseOver","onSchedulerResourceMouseOut","onSchedulerResourceScroll","schedulerContentRef","schedulerContentBgTableRef","onSchedulerContentMouseOver","onSchedulerContentMouseOut","onSchedulerContentScroll","onScrollLeft","onScrollRight","onScrollTop","onScrollBottom","scrollWidth","scrollHeight","onViewChange","charAt","goNext","nextClick","goBack","prevClick","handleVisibleChange","visible","onSelect","onSelectDate","dndSources","dndContext","onresize","getScrollToSpecialMoment","specialMoment","tbodyContent","leftCustomHeader","rightCustomHeader","getDateLabel","defaultValue","radioButtonList","margin","schedulerContainerWidth","DndResourceEvents","eventDndSource","resourcePaddingBottom","schedulerContentStyle","overflow","position","resourceContentStyle","overflowX","overflowY","maxHeight","verticalAlign","borderBottom","onMouseOver","onMouseOut","onScroll","paddingRight","popover","fullscreen","schedulerHeader","justify","marginBottom","marginRight","onVisibleChange","size","onChange","colSpan","DragDropContext","HTML5Backend","withDragDropContext","prev","setEvents","viewModel","next","view","setViewType","setDate","newFreshId","addEvent","maxScrollLeft","ViewTypes","maxScrollTop","toggleExpandStatus","locale","setResources","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.48272a45.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/grid/style/index.css'\r\n\r\nclass EventItemPopover extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        eventItem: PropTypes.object.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        startTime: PropTypes.string.isRequired,\r\n        endTime: PropTypes.string.isRequired,\r\n        statusColor: PropTypes.string.isRequired,\r\n        subtitleGetter: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        eventItemPopoverTemplateResolver: PropTypes.func\r\n    }\r\n\r\n    render(){\r\n        const {schedulerData, eventItem, title, startTime, endTime, statusColor,subtitleGetter, viewEventClick, viewEventText, viewEvent2Click, viewEvent2Text, eventItemPopoverTemplateResolver} = this.props;\r\n        const {localeMoment, config} = schedulerData;\r\n        let start = localeMoment(startTime), end = localeMoment(endTime);\r\n\r\n        if (eventItemPopoverTemplateResolver != undefined) {\r\n            return eventItemPopoverTemplateResolver(schedulerData, eventItem, title, start, end, statusColor);\r\n        } else {\r\n            let subtitleRow = <div />;\r\n            if(subtitleGetter !== undefined){\r\n                let subtitle = subtitleGetter(schedulerData, eventItem);\r\n                if(subtitle != undefined){\r\n                    subtitleRow = (\r\n                        <Row type=\"flex\" align=\"middle\">\r\n                            <Col span={2}>\r\n                                <div />\r\n                            </Col>\r\n                            <Col span={22} className=\"overflow-text\">\r\n                                <span className=\"header2-text\" title={subtitle}>{subtitle}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    );\r\n                }\r\n            }\r\n\r\n            let opsRow = <div />;\r\n            if(viewEventText !== undefined && viewEventClick !== undefined && (eventItem.clickable1 == undefined || eventItem.clickable1)){\r\n                let col = (\r\n                    <Col span={22}>\r\n                        <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEventClick(schedulerData, eventItem);}}>{viewEventText}</span>\r\n                    </Col>\r\n                );\r\n                if(viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\r\n                    col = (\r\n                        <Col span={22}>\r\n                            <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEventClick(schedulerData, eventItem);}}>{viewEventText}</span><span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer', marginLeft: '16px'}} onClick={() => {viewEvent2Click(schedulerData, eventItem);}}>{viewEvent2Text}</span>\r\n                        </Col>\r\n                    )\r\n                };\r\n                opsRow = (\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        {col}\r\n                    </Row>\r\n                );\r\n            }\r\n            else if(viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\r\n                let col = (\r\n                    <Col span={22}>\r\n                        <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEvent2Click(schedulerData, eventItem);}}>{viewEvent2Text}</span>\r\n                    </Col>\r\n                );\r\n                opsRow = (\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        {col}\r\n                    </Row>\r\n                );\r\n            }\r\n\r\n            let dateFormat = config.eventItemPopoverDateFormat;\r\n            return (\r\n                <div style={{width: '300px'}}>\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div className=\"status-dot\" style={{backgroundColor: statusColor}} />\r\n                        </Col>\r\n                        <Col span={22} className=\"overflow-text\">\r\n                            <span className=\"header2-text\" title={title}>{title}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    {subtitleRow}\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        <Col span={22}>\r\n                            <span className=\"header1-text\">{start.format('HH:mm')}</span><span className=\"help-text\" style={{marginLeft: '8px'}}>{start.format(dateFormat)}</span><span className=\"header2-text\"  style={{marginLeft: '8px'}}>-</span><span className=\"header1-text\" style={{marginLeft: '8px'}}>{end.format('HH:mm')}</span><span className=\"help-text\" style={{marginLeft: '8px'}}>{end.format(dateFormat)}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    {opsRow}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventItemPopover\r\n","export const DnDTypes = {\r\n    EVENT: 'event'\r\n};\r\n","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Popover from 'antd/lib/popover'\r\nimport 'antd/lib/popover/style/index.css'\r\nimport EventItemPopover from './EventItemPopover'\r\nimport {CellUnits, DATETIME_FORMAT} from '../Scheduler/Scheduler'\r\nimport {DnDTypes} from './DnDTypes'\r\nconst supportTouch = 'ontouchstart' in window;\r\n\r\nclass EventItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {left, top, width} = props;\r\n        this.state = {\r\n            left: left,\r\n            top: top,\r\n            width: width,\r\n        };\r\n        this.startResizer = null;\r\n        this.endResizer = null;\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        eventItem: PropTypes.object.isRequired,\r\n        isStart: PropTypes.bool.isRequired,\r\n        isEnd: PropTypes.bool.isRequired,\r\n        left: PropTypes.number.isRequired,\r\n        width: PropTypes.number.isRequired,\r\n        top: PropTypes.number.isRequired,\r\n        isInPopover: PropTypes.bool.isRequired,\r\n        leftIndex: PropTypes.number.isRequired,\r\n        rightIndex: PropTypes.number.isRequired,\r\n        isDragging: PropTypes.bool.isRequired,\r\n        connectDragSource: PropTypes.func.isRequired,\r\n        connectDragPreview: PropTypes.func.isRequired,\r\n        updateEventStart: PropTypes.func,\r\n        updateEventEnd: PropTypes.func,\r\n        moveEvent: PropTypes.func,\r\n        subtitleGetter: PropTypes.func,\r\n        eventItemClick: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText: PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        conflictOccurred: PropTypes.func,\r\n        eventItemTemplateResolver: PropTypes.func,\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(np) {\r\n        const {left, top, width} = np;\r\n        this.setState({\r\n            left: left,\r\n            top: top,\r\n            width: width,\r\n        });\r\n\r\n        this.subscribeResizeEvent(np);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.subscribeResizeEvent(this.props);\r\n    }\r\n\r\n    initStartDrag = (ev) => {\r\n        const {schedulerData, eventItem} = this.props;\r\n        let slotId = schedulerData._getEventSlotId(eventItem);\r\n        let slot = schedulerData.getSlotById(slotId);\r\n        if(!!slot && !!slot.groupOnly) return;\r\n        if(schedulerData._isResizing()) return;\r\n\r\n        ev.stopPropagation();\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            if (ev.buttons !== undefined && ev.buttons !== 1) return;\r\n            clientX = ev.clientX;\r\n        }\r\n        this.setState({\r\n            startX: clientX\r\n        });\r\n        schedulerData._startResizing();\r\n        if(supportTouch) {\r\n            this.startResizer.addEventListener('touchmove', this.doStartDrag, false);\r\n            this.startResizer.addEventListener('touchend', this.stopStartDrag, false);\r\n            this.startResizer.addEventListener('touchcancel', this.cancelStartDrag, false);\r\n        } else {\r\n            document.documentElement.addEventListener('mousemove', this.doStartDrag, false);\r\n            document.documentElement.addEventListener('mouseup', this.stopStartDrag, false);\r\n        }\r\n        document.onselectstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tdocument.ondragstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n    }\r\n\r\n    doStartDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            clientX = ev.clientX;\r\n        }\r\n        const {left, width, leftIndex, rightIndex, schedulerData} = this.props;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let offset = leftIndex > 0 ? 5 : 6;\r\n        let minWidth = cellWidth - offset;\r\n        let maxWidth = rightIndex * cellWidth - offset;\r\n        const {startX} = this.state;\r\n        let newLeft = left + clientX - startX;\r\n        let newWidth = width + startX - clientX;\r\n        if (newWidth < minWidth) {\r\n            newWidth = minWidth;\r\n            newLeft = (rightIndex - 1) * cellWidth + (rightIndex - 1 > 0 ? 2 : 3);\r\n        }\r\n        else if (newWidth > maxWidth) {\r\n            newWidth = maxWidth;\r\n            newLeft = 3;\r\n        }\r\n\r\n        this.setState({left: newLeft, width: newWidth});\r\n    }\r\n\r\n    stopStartDrag = (ev) => {\r\n        ev.stopPropagation();\r\n        if(supportTouch) {\r\n            this.startResizer.removeEventListener('touchmove', this.doStartDrag, false);\r\n            this.startResizer.removeEventListener('touchend', this.stopStartDrag, false);\r\n            this.startResizer.removeEventListener('touchcancel', this.cancelStartDrag, false);\r\n        } else {\r\n            document.documentElement.removeEventListener('mousemove', this.doStartDrag, false);\r\n            document.documentElement.removeEventListener('mouseup', this.stopStartDrag, false);\r\n        }\r\n        document.onselectstart = null;\r\n        document.ondragstart = null;\r\n        const {width, left, top, leftIndex, rightIndex, schedulerData, eventItem, updateEventStart, conflictOccurred} = this.props;\r\n        schedulerData._stopResizing();\r\n        if(this.state.width === width) return;\r\n\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) {\r\n                this.setState({\r\n                    left: left,\r\n                    top: top,\r\n                    width: width,\r\n                });\r\n                return;\r\n            }\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            clientX = ev.clientX;\r\n        }\r\n        const {cellUnit, events, config, localeMoment} = schedulerData;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let offset = leftIndex > 0 ? 5 : 6;\r\n        let minWidth = cellWidth - offset;\r\n        let maxWidth = rightIndex * cellWidth - offset;\r\n        const {startX} = this.state;\r\n        let newWidth = width + startX - clientX;\r\n        let deltaX = clientX - startX;\r\n        let sign = deltaX < 0 ? -1 : (deltaX === 0 ? 0 : 1);\r\n        let count = (sign > 0 ? Math.floor(Math.abs(deltaX) / cellWidth) : Math.ceil(Math.abs(deltaX) / cellWidth)) * sign;\r\n        if (newWidth < minWidth)\r\n            count = rightIndex - leftIndex - 1;\r\n        else if (newWidth > maxWidth)\r\n            count = -leftIndex;\r\n        let newStart = localeMoment(eventItem.start).add(cellUnit === CellUnits.Hour ? count * config.minuteStep : count, cellUnit === CellUnits.Hour ? 'minutes' : 'days').format(DATETIME_FORMAT);\r\n        if(count !== 0 && cellUnit !== CellUnits.Hour && config.displayWeekend === false) {\r\n            if(count > 0) {\r\n                let tempCount = 0, i = 0;\r\n                while (true) {\r\n                    i++;\r\n                    let tempStart = localeMoment(eventItem.start).add(i, 'days');\r\n                    let dayOfWeek = tempStart.weekday();\r\n                    if(dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n                        tempCount ++;\r\n                        if(tempCount === count) {\r\n                            newStart = tempStart.format(DATETIME_FORMAT);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                let tempCount = 0, i = 0;\r\n                while (true) {\r\n                    i--;\r\n                    let tempStart = localeMoment(eventItem.start).add(i, 'days');\r\n                    let dayOfWeek = tempStart.weekday();\r\n                    if(dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n                        tempCount --;\r\n                        if(tempCount === count) {\r\n                            newStart = tempStart.format(DATETIME_FORMAT);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let hasConflict = false;\r\n        let slotId = schedulerData._getEventSlotId(eventItem);\r\n        let slotName = undefined;\r\n        let slot = schedulerData.getSlotById(slotId);\r\n        if(!!slot)\r\n            slotName = slot.name;\r\n        if (config.checkConflict) {\r\n            let start = localeMoment(newStart),\r\n                end = localeMoment(eventItem.end);\r\n\r\n            events.forEach((e) => {\r\n                if (schedulerData._getEventSlotId(e) === slotId && e.id !== eventItem.id) {\r\n                    let eStart = localeMoment(e.start),\r\n                        eEnd = localeMoment(e.end);\r\n                    if ((start >= eStart && start < eEnd) || (end > eStart && end <= eEnd) || (eStart >= start && eStart < end) || (eEnd > start && eEnd <= end))\r\n                        hasConflict = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasConflict) {\r\n            this.setState({\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n            });\r\n\r\n            if (conflictOccurred != undefined) {\r\n                conflictOccurred(schedulerData, 'StartResize', eventItem, DnDTypes.EVENT, slotId, slotName, newStart, eventItem.end);\r\n            }\r\n            else {\r\n                console.log('Conflict occurred, set conflictOccurred func in Scheduler to handle it');\r\n            }\r\n            this.subscribeResizeEvent(this.props);\r\n        }\r\n        else {\r\n            if (updateEventStart != undefined)\r\n                updateEventStart(schedulerData, eventItem, newStart);\r\n        }\r\n    }\r\n\r\n    cancelStartDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        this.startResizer.removeEventListener('touchmove', this.doStartDrag, false);\r\n        this.startResizer.removeEventListener('touchend', this.stopStartDrag, false);\r\n        this.startResizer.removeEventListener('touchcancel', this.cancelStartDrag, false);\r\n        document.onselectstart = null;\r\n        document.ondragstart = null;\r\n        const {schedulerData, left, top, width} = this.props;\r\n        schedulerData._stopResizing();\r\n        this.setState({\r\n            left: left,\r\n            top: top,\r\n            width: width,\r\n        });\r\n    }\r\n\r\n    initEndDrag = (ev) => {\r\n        const {schedulerData, eventItem} = this.props;\r\n        let slotId = schedulerData._getEventSlotId(eventItem);\r\n        let slot = schedulerData.getSlotById(slotId);\r\n        if(!!slot && !!slot.groupOnly) return;\r\n        if(schedulerData._isResizing()) return;\r\n\r\n        ev.stopPropagation();\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            if (ev.buttons !== undefined && ev.buttons !== 1) return;\r\n            clientX = ev.clientX;\r\n        }\r\n        this.setState({\r\n            endX: clientX\r\n        });\r\n\r\n        schedulerData._startResizing();\r\n        if(supportTouch) {\r\n            this.endResizer.addEventListener('touchmove', this.doEndDrag, false);\r\n            this.endResizer.addEventListener('touchend', this.stopEndDrag, false);\r\n            this.endResizer.addEventListener('touchcancel', this.cancelEndDrag, false);\r\n        } else {\r\n            document.documentElement.addEventListener('mousemove', this.doEndDrag, false);\r\n            document.documentElement.addEventListener('mouseup', this.stopEndDrag, false);\r\n        }\r\n        document.onselectstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tdocument.ondragstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n    }\r\n\r\n    doEndDrag = (ev) => {\r\n        ev.stopPropagation();\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            clientX = ev.clientX;\r\n        }\r\n        const {width, leftIndex, schedulerData} = this.props;\r\n        const {headers} = schedulerData;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let offset = leftIndex > 0 ? 5 : 6;\r\n        let minWidth = cellWidth - offset;\r\n        let maxWidth = (headers.length - leftIndex) * cellWidth - offset;\r\n        const {endX} = this.state;\r\n\r\n        let newWidth = (width + clientX - endX);\r\n        if (newWidth < minWidth)\r\n            newWidth = minWidth;\r\n        else if (newWidth > maxWidth)\r\n            newWidth = maxWidth;\r\n\r\n        this.setState({width: newWidth});\r\n    }\r\n\r\n    stopEndDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        if(supportTouch) {\r\n            this.endResizer.removeEventListener('touchmove', this.doEndDrag, false);\r\n            this.endResizer.removeEventListener('touchend', this.stopEndDrag, false);\r\n            this.endResizer.removeEventListener('touchcancel', this.cancelEndDrag, false);\r\n        } else {\r\n            document.documentElement.removeEventListener('mousemove', this.doEndDrag, false);\r\n            document.documentElement.removeEventListener('mouseup', this.stopEndDrag, false);\r\n        }\r\n        document.onselectstart = null;\r\n        document.ondragstart = null;\r\n        const {width, left, top, leftIndex, rightIndex, schedulerData, eventItem, updateEventEnd, conflictOccurred} = this.props;\r\n        schedulerData._stopResizing();\r\n        if(this.state.width === width) return;\r\n\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) {\r\n                this.setState({\r\n                    left: left,\r\n                    top: top,\r\n                    width: width,\r\n                });\r\n                return;\r\n            }\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            clientX = ev.clientX;\r\n        }\r\n        const {headers, cellUnit, events, config, localeMoment} = schedulerData;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let offset = leftIndex > 0 ? 5 : 6;\r\n        let minWidth = cellWidth - offset;\r\n        let maxWidth = (headers.length - leftIndex) * cellWidth - offset;\r\n        const {endX} = this.state;\r\n\r\n        let newWidth = (width + clientX - endX);\r\n        let deltaX = newWidth - width;\r\n        let sign = deltaX < 0 ? -1 : (deltaX === 0 ? 0 : 1);\r\n        let count = (sign < 0 ? Math.floor(Math.abs(deltaX) / cellWidth) : Math.ceil(Math.abs(deltaX) / cellWidth)) * sign;\r\n        if (newWidth < minWidth)\r\n            count = leftIndex - rightIndex + 1;\r\n        else if (newWidth > maxWidth)\r\n            count = headers.length - rightIndex;\r\n        let newEnd = localeMoment(eventItem.end).add(cellUnit === CellUnits.Hour ? count * config.minuteStep : count, cellUnit === CellUnits.Hour ? 'minutes' : 'days').format(DATETIME_FORMAT);\r\n        if(count !== 0 && cellUnit !== CellUnits.Hour && config.displayWeekend === false) {\r\n            if(count > 0) {\r\n                let tempCount = 0, i = 0;\r\n                while (true) {\r\n                    i++;\r\n                    let tempEnd = localeMoment(eventItem.end).add(i, 'days');\r\n                    let dayOfWeek = tempEnd.weekday();\r\n                    if(dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n                        tempCount ++;\r\n                        if(tempCount === count) {\r\n                            newEnd = tempEnd.format(DATETIME_FORMAT);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                let tempCount = 0, i = 0;\r\n                while (true) {\r\n                    i--;\r\n                    let tempEnd = localeMoment(eventItem.end).add(i, 'days');\r\n                    let dayOfWeek = tempEnd.weekday();\r\n                    if(dayOfWeek !== 0 && dayOfWeek !== 6) {\r\n                        tempCount --;\r\n                        if(tempCount === count) {\r\n                            newEnd = tempEnd.format(DATETIME_FORMAT);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let hasConflict = false;\r\n        let slotId = schedulerData._getEventSlotId(eventItem);\r\n        let slotName = undefined;\r\n        let slot = schedulerData.getSlotById(slotId);\r\n        if(!!slot)\r\n            slotName = slot.name;\r\n        if (config.checkConflict) {\r\n            let start = localeMoment(eventItem.start),\r\n                end = localeMoment(newEnd);\r\n\r\n            events.forEach((e) => {\r\n                if (schedulerData._getEventSlotId(e) === slotId && e.id !== eventItem.id) {\r\n                    let eStart = localeMoment(e.start),\r\n                        eEnd = localeMoment(e.end);\r\n                    if ((start >= eStart && start < eEnd) || (end > eStart && end <= eEnd) || (eStart >= start && eStart < end) || (eEnd > start && eEnd <= end))\r\n                        hasConflict = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasConflict) {\r\n            this.setState({\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n            });\r\n\r\n            if (conflictOccurred != undefined) {\r\n                conflictOccurred(schedulerData, 'EndResize', eventItem, DnDTypes.EVENT, slotId, slotName, eventItem.start, newEnd);\r\n            }\r\n            else {\r\n                console.log('Conflict occurred, set conflictOccurred func in Scheduler to handle it');\r\n            }\r\n            this.subscribeResizeEvent(this.props);\r\n        }\r\n        else {\r\n            if (updateEventEnd != undefined)\r\n                updateEventEnd(schedulerData, eventItem, newEnd);\r\n        }\r\n    }\r\n\r\n    cancelEndDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        this.endResizer.removeEventListener('touchmove', this.doEndDrag, false);\r\n        this.endResizer.removeEventListener('touchend', this.stopEndDrag, false);\r\n        this.endResizer.removeEventListener('touchcancel', this.cancelEndDrag, false);\r\n        document.onselectstart = null;\r\n        document.ondragstart = null;\r\n        const {schedulerData, left, top, width} = this.props;\r\n        schedulerData._stopResizing();\r\n        this.setState({\r\n            left: left,\r\n            top: top,\r\n            width: width,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {eventItem, isStart, isEnd, isInPopover, eventItemClick, schedulerData, isDragging, connectDragSource, connectDragPreview, eventItemTemplateResolver} = this.props;\r\n        const {config, localeMoment} = schedulerData;\r\n        const {left, width, top} = this.state;\r\n        let roundCls = isStart ? (isEnd ? 'round-all' : 'round-head') : (isEnd ? 'round-tail' : 'round-none');\r\n        let bgColor = config.defaultEventBgColor;\r\n        if (!!eventItem.bgColor)\r\n            bgColor = eventItem.bgColor;\r\n\r\n        let titleText = schedulerData.behaviors.getEventTextFunc(schedulerData, eventItem);\r\n        let content = (\r\n            <EventItemPopover\r\n                {...this.props}\r\n                eventItem={eventItem}\r\n                title={eventItem.title}\r\n                startTime={eventItem.start}\r\n                endTime={eventItem.end}\r\n                statusColor={bgColor}/>\r\n        );\r\n\r\n        let start = localeMoment(eventItem.start);\r\n        let eventTitle = isInPopover ? `${start.format('HH:mm')} ${titleText}` : titleText;\r\n        let startResizeDiv = <div />;\r\n        if (this.startResizable(this.props))\r\n            startResizeDiv = <div className=\"event-resizer event-start-resizer\" ref={(ref) => this.startResizer = ref}></div>;\r\n        let endResizeDiv = <div />;\r\n        if (this.endResizable(this.props))\r\n            endResizeDiv = <div className=\"event-resizer event-end-resizer\" ref={(ref) => this.endResizer = ref}></div>;\r\n\r\n        let eventItemTemplate = (\r\n            <div className={roundCls + ' event-item'} key={eventItem.id}\r\n                 style={{height: config.eventItemHeight, backgroundColor: bgColor}}>\r\n                <span style={{marginLeft: '10px', lineHeight: `${config.eventItemHeight}px` }}>{eventTitle}</span>\r\n            </div>\r\n        );\r\n        if(eventItemTemplateResolver != undefined)\r\n            eventItemTemplate = eventItemTemplateResolver(schedulerData, eventItem, bgColor, isStart, isEnd, 'event-item', config.eventItemHeight, undefined);\r\n\r\n        let a = <a className=\"timeline-event\" style={{left: left, width: width, top: top}} onClick={() => { if(!!eventItemClick) eventItemClick(schedulerData, eventItem);}}>\r\n            {eventItemTemplate}\r\n            {startResizeDiv}\r\n            {endResizeDiv}\r\n        </a>;\r\n\r\n        return (\r\n            isDragging ? null : ( schedulerData._isResizing() || config.eventItemPopoverEnabled == false || eventItem.showPopover == false ?\r\n                    <div>\r\n                        {\r\n                            connectDragPreview(\r\n                                connectDragSource(a)\r\n                            )\r\n                        }\r\n                    </div> :\r\n                    <Popover placement=\"bottomLeft\" content={content} trigger=\"hover\">\r\n                        {\r\n                            connectDragPreview(\r\n                                connectDragSource(a)\r\n                            )\r\n                        }\r\n                    </Popover>\r\n            )\r\n        );\r\n    }\r\n\r\n    startResizable = (props) => {\r\n        const {eventItem, isInPopover, schedulerData} = props;\r\n        const {config} = schedulerData;\r\n        return config.startResizable === true && isInPopover === false\r\n            && (eventItem.resizable == undefined || eventItem.resizable !== false)\r\n            && (eventItem.startResizable == undefined || eventItem.startResizable !== false);\r\n    }\r\n\r\n    endResizable = (props) => {\r\n        const {eventItem, isInPopover, schedulerData} = props;\r\n        const {config} = schedulerData;\r\n        return config.endResizable === true && isInPopover === false\r\n            && (eventItem.resizable == undefined || eventItem.resizable !== false)\r\n            && (eventItem.endResizable == undefined || eventItem.endResizable !== false);\r\n    }\r\n\r\n    subscribeResizeEvent = (props) => {\r\n        if (this.startResizer != undefined) {\r\n            if(supportTouch) {\r\n                // this.startResizer.removeEventListener('touchstart', this.initStartDrag, false);\r\n                // if (this.startResizable(props))\r\n                //     this.startResizer.addEventListener('touchstart', this.initStartDrag, false);\r\n            } else {\r\n                this.startResizer.removeEventListener('mousedown', this.initStartDrag, false);\r\n                if (this.startResizable(props))\r\n                    this.startResizer.addEventListener('mousedown', this.initStartDrag, false);\r\n            }\r\n        }\r\n        if (this.endResizer != undefined) {\r\n            if(supportTouch) {\r\n                // this.endResizer.removeEventListener('touchstart', this.initEndDrag, false);\r\n                // if (this.endResizable(props))\r\n                //     this.endResizer.addEventListener('touchstart', this.initEndDrag, false);\r\n            } else {\r\n                this.endResizer.removeEventListener('mousedown', this.initEndDrag, false);\r\n                if (this.endResizable(props))\r\n                    this.endResizer.addEventListener('mousedown', this.initEndDrag, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventItem","import { DragSource } from 'react-dnd'\r\nimport {CalendarTypes, DATETIME_FORMAT} from '../Scheduler/Scheduler'\r\nimport {DnDTypes} from './DnDTypes'\r\n\r\nexport default class DnDSource {\r\n    constructor(resolveDragObjFunc, DecoratedComponent, dndType = DnDTypes.EVENT) {\r\n        this.resolveDragObjFunc = resolveDragObjFunc;\r\n        this.DecoratedComponent = DecoratedComponent;\r\n        this.dndType = dndType;\r\n        this.dragSource = DragSource(this.dndType, this.getDragSpec(), this.getDragCollect)(this.DecoratedComponent);\r\n    }\r\n\r\n    getDragSpec = () => {\r\n        return {\r\n            beginDrag: (props, monitor, component) => {\r\n                return this.resolveDragObjFunc(props);\r\n            },\r\n            endDrag: (props, monitor, component) => {\r\n                if(!monitor.didDrop()) return;\r\n\r\n                const {moveEvent, newEvent, schedulerData } = props;\r\n                const {events, config, viewType, localeMoment} = schedulerData;\r\n                const item = monitor.getItem();\r\n                const type = monitor.getItemType();\r\n                const dropResult = monitor.getDropResult();\r\n                let slotId = dropResult.slotId, slotName = dropResult.slotName;\r\n                let newStart = dropResult.start, newEnd = dropResult.end;\r\n                let initialStart = dropResult.initialStart, initialEnd = dropResult.initialEnd;\r\n                let action = 'New';\r\n\r\n                let isEvent = type === DnDTypes.EVENT;\r\n                if(isEvent) {\r\n                    const event = item;\r\n                    if(config.relativeMove) {\r\n                        newStart = localeMoment(event.start).add(localeMoment(newStart).diff(localeMoment(initialStart)), 'ms').format(DATETIME_FORMAT);\r\n                    } else {\r\n                        if(viewType !== CalendarTypes.Day) {\r\n                            let tmpMoment = localeMoment(newStart);\r\n                            newStart = localeMoment(event.start).year(tmpMoment.year()).month(tmpMoment.month()).date(tmpMoment.date()).format(DATETIME_FORMAT);\r\n                        }\r\n                    }\r\n                    newEnd = localeMoment(newStart).add(localeMoment(event.end).diff(localeMoment(event.start)), 'ms').format(DATETIME_FORMAT);\r\n\r\n                    //if crossResourceMove disabled, slot returns old value\r\n                    if(config.crossResourceMove === false) {\r\n                        slotId = schedulerData._getEventSlotId(item);\r\n                        slotName = undefined;\r\n                        let slot = schedulerData.getSlotById(slotId);\r\n                        if(!!slot)\r\n                            slotName = slot.name;\r\n                    }\r\n\r\n                    action = 'Move';\r\n                }\r\n\r\n                let hasConflict = false;\r\n                if(config.checkConflict) {\r\n                    let start = localeMoment(newStart),\r\n                        end = localeMoment(newEnd);\r\n\r\n                    events.forEach((e) =>{\r\n                        if(schedulerData._getEventSlotId(e) === slotId && (!isEvent || e.id !== item.id)) {\r\n                            let eStart = localeMoment(e.start),\r\n                                eEnd = localeMoment(e.end);\r\n                            if((start >= eStart && start < eEnd) || (end > eStart && end <= eEnd) || (eStart >= start && eStart < end) || (eEnd > start && eEnd <= end))\r\n                                hasConflict = true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if(hasConflict) {\r\n                    const {conflictOccurred} = props;\r\n                    if(conflictOccurred != undefined){\r\n                        conflictOccurred(schedulerData, action, item, type, slotId, slotName, newStart, newEnd);\r\n                    }\r\n                    else {\r\n                        console.log('Conflict occurred, set conflictOccurred func in Scheduler to handle it');\r\n                    }\r\n                }\r\n                else {\r\n                    if(isEvent) {\r\n                        if (moveEvent !== undefined) {\r\n                            moveEvent(schedulerData, item, slotId, slotName, newStart, newEnd);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if(newEvent !== undefined)\r\n                            newEvent(schedulerData, slotId, slotName, newStart, newEnd, type, item);\r\n                    }\r\n                }\r\n            },\r\n\r\n            canDrag: (props) => {\r\n                const {schedulerData, resourceEvents} = props;\r\n                const item = this.resolveDragObjFunc(props);\r\n                if(schedulerData._isResizing()) return false;\r\n                const {config} = schedulerData;\r\n                return config.movable && (resourceEvents == undefined || !resourceEvents.groupOnly) && (item.movable == undefined || item.movable !== false);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDragCollect = (connect, monitor) => {\r\n        return {\r\n            connectDragSource: connect.dragSource(),\r\n            isDragging: monitor.isDragging(),\r\n            connectDragPreview: connect.dragPreview()\r\n        };\r\n    }\r\n\r\n    getDragSource = () => {\r\n        return this.dragSource;\r\n    }\r\n}\r\n","function getPos(element) {\r\n    let x = 0, y = 0;\r\n    if(!!element) {\r\n        do {\r\n            x += element.offsetLeft - element.scrollLeft;\r\n            y += element.offsetTop - element.scrollTop;\r\n        } while (element = element.offsetParent);\r\n    }\r\n    return { 'x': x, 'y': y };\r\n}\r\n\r\nexport {\r\n    getPos\r\n}\r\n","const CalendarTypes = {\r\n    Day: 0,\r\n    Week: 1\r\n};\r\n\r\nexport default CalendarTypes\r\n","import { DropTarget } from 'react-dnd'\r\nimport {getPos} from '../Scheduler/Util'\r\nimport {DnDTypes} from './DnDTypes'\r\nimport {CellUnits, DATETIME_FORMAT} from '../Scheduler/Scheduler'\r\nimport CalendarTypes from '../Calendar/CalendarTypes'\r\n\r\nexport default class DnDContext {\r\n    constructor(sources, DecoratedComponent) {\r\n        this.sourceMap = new Map();\r\n        sources.forEach((item) => {\r\n            this.sourceMap.set(item.dndType, item);\r\n        })\r\n        this.DecoratedComponent = DecoratedComponent;\r\n    }\r\n\r\n    getDropSpec = () => {\r\n        return {\r\n            drop: (props, monitor, component) =>{\r\n                const {schedulerData, resourceEvents} = props;\r\n                const {cellUnit, localeMoment} = schedulerData;\r\n                const type = monitor.getItemType();\r\n                const pos = getPos(component.eventContainer);\r\n                let cellWidth = schedulerData.getContentCellWidth();\r\n                let initialStartTime = null, initialEndTime = null;\r\n                if(type === DnDTypes.EVENT) {\r\n                    const initialPoint = monitor.getInitialClientOffset();\r\n                    let initialLeftIndex = Math.floor((initialPoint.x - pos.x)/cellWidth);\r\n                    initialStartTime = resourceEvents.headerItems[initialLeftIndex].start;\r\n                    initialEndTime = resourceEvents.headerItems[initialLeftIndex].end;\r\n                    if(cellUnit !== CellUnits.Hour)\r\n                        initialEndTime = localeMoment(resourceEvents.headerItems[initialLeftIndex].start).hour(23).minute(59).second(59).format(DATETIME_FORMAT);\r\n                }\r\n                const point = monitor.getClientOffset();                \r\n                let leftIndex = Math.floor((point.x - pos.x)/cellWidth);\r\n                let startTime = resourceEvents.headerItems[leftIndex].start;\r\n                let endTime = resourceEvents.headerItems[leftIndex].end;\r\n                if(cellUnit !== CellUnits.Hour)\r\n                    endTime = localeMoment(resourceEvents.headerItems[leftIndex].start).hour(23).minute(59).second(59).format(DATETIME_FORMAT);\r\n\r\n                return {\r\n                    slotId: resourceEvents.slotId,\r\n                    slotName: resourceEvents.slotName,\r\n                    start: startTime,\r\n                    end: endTime,\r\n                    initialStart: initialStartTime,\r\n                    initialEnd: initialEndTime\r\n                };\r\n            },\r\n\r\n            hover: (props, monitor, component) => {\r\n                const {schedulerData, resourceEvents, movingEvent} = props;\r\n                const {cellUnit, config, viewType, localeMoment} = schedulerData;\r\n                const item = monitor.getItem();\r\n                const type = monitor.getItemType();\r\n                const pos = getPos(component.eventContainer);\r\n                let cellWidth = schedulerData.getContentCellWidth();\r\n                let initialStart = null, initialEnd = null;\r\n                if(type === DnDTypes.EVENT) {\r\n                    const initialPoint = monitor.getInitialClientOffset();\r\n                    let initialLeftIndex = Math.floor((initialPoint.x - pos.x)/cellWidth);\r\n                    initialStart = resourceEvents.headerItems[initialLeftIndex].start;\r\n                    initialEnd = resourceEvents.headerItems[initialLeftIndex].end;\r\n                    if(cellUnit !== CellUnits.Hour)\r\n                        initialEnd = localeMoment(resourceEvents.headerItems[initialLeftIndex].start).hour(23).minute(59).second(59).format(DATETIME_FORMAT);\r\n                }\r\n                const point = monitor.getClientOffset();                \r\n                let leftIndex = Math.floor((point.x - pos.x)/cellWidth);\r\n                if(!resourceEvents.headerItems[leftIndex]) {\r\n                    return;\r\n                }\r\n                let newStart = resourceEvents.headerItems[leftIndex].start;\r\n                let newEnd = resourceEvents.headerItems[leftIndex].end;\r\n                if(cellUnit !== CellUnits.Hour)\r\n                    newEnd = localeMoment(resourceEvents.headerItems[leftIndex].start).hour(23).minute(59).second(59).format(DATETIME_FORMAT);\r\n                let slotId = resourceEvents.slotId, slotName = resourceEvents.slotName;\r\n                let action = 'New';\r\n                let isEvent = type === DnDTypes.EVENT;\r\n                if(isEvent) {\r\n                    const event = item;\r\n                    if(config.relativeMove) {\r\n                        newStart = localeMoment(event.start).add(localeMoment(newStart).diff(localeMoment(initialStart)), 'ms').format(DATETIME_FORMAT);\r\n                    } else {\r\n                        if(viewType !== CalendarTypes.Day) {\r\n                            let tmpMoment = localeMoment(newStart);\r\n                            newStart = localeMoment(event.start).year(tmpMoment.year()).month(tmpMoment.month()).date(tmpMoment.date()).format(DATETIME_FORMAT);\r\n                        }\r\n                    }\r\n                    newEnd = localeMoment(newStart).add(localeMoment(event.end).diff(localeMoment(event.start)), 'ms').format(DATETIME_FORMAT);\r\n\r\n                    //if crossResourceMove disabled, slot returns old value\r\n                    if(config.crossResourceMove === false) {\r\n                        slotId = schedulerData._getEventSlotId(item);\r\n                        slotName = undefined;\r\n                        let slot = schedulerData.getSlotById(slotId);\r\n                        if(!!slot)\r\n                            slotName = slot.name;\r\n                    }\r\n\r\n                    action = 'Move';\r\n                }\r\n\r\n                if(!!movingEvent) {\r\n                    movingEvent(schedulerData, slotId, slotName, newStart, newEnd, action, type, item);\r\n                }\r\n            },\r\n\r\n            canDrop: (props, monitor) => {\r\n                const {schedulerData, resourceEvents} = props;\r\n                const item = monitor.getItem();\r\n                if(schedulerData._isResizing()) return false;\r\n                const {config} = schedulerData;\r\n                return config.movable && !resourceEvents.groupOnly && (item.movable == undefined || item.movable !== false);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDropCollect = (connect, monitor) => {\r\n        return {\r\n            connectDropTarget: connect.dropTarget(),\r\n            isOver: monitor.isOver()\r\n        };\r\n    }\r\n\r\n    getDropTarget = () => {\r\n        return DropTarget([...this.sourceMap.keys()], this.getDropSpec(), this.getDropCollect)(this.DecoratedComponent);\r\n    }\r\n\r\n    getDndSource = (dndType = DnDTypes.EVENT) => {\r\n        return this.sourceMap.get(dndType);\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Icon from 'antd/lib/icon'\r\n\r\nclass ResourceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        contentScrollbarHeight: PropTypes.number.isRequired,\r\n        slotClickedFunc: PropTypes.func,\r\n        slotItemTemplateResolver: PropTypes.func,\r\n        toggleExpandFunc: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n\r\n        const {schedulerData, contentScrollbarHeight, slotClickedFunc, slotItemTemplateResolver, toggleExpandFunc} = this.props;\r\n        const {renderData} = schedulerData;\r\n\r\n        let width = schedulerData.getResourceTableWidth() - 2;\r\n        let paddingBottom = contentScrollbarHeight;\r\n        let displayRenderData = renderData.filter(o => o.render);\r\n        let resourceList = displayRenderData.map((item) => {\r\n            let indents = [];\r\n            for(let i=0;i<item.indent;i++) {\r\n                indents.push(<span key={`es${i}`} className=\"expander-space\"></span>);\r\n            }\r\n            let indent = <span key={`es${item.indent}`} className=\"expander-space\"></span>;\r\n            if(item.hasChildren) {\r\n                indent = item.expanded ? (\r\n                    <Icon type=\"minus-square\" key={`es${item.indent}`} style={{}} className=\"\"\r\n                        onClick={() => {\r\n                            if(!!toggleExpandFunc)\r\n                                toggleExpandFunc(schedulerData, item.slotId);\r\n                        }}/>\r\n                ) : (\r\n                    <Icon type=\"plus-square\" key={`es${item.indent}`} style={{}} className=\"\"\r\n                        onClick={() => {\r\n                            if(!!toggleExpandFunc)\r\n                                toggleExpandFunc(schedulerData, item.slotId);\r\n                        }}/>\r\n                );\r\n            }\r\n            indents.push(indent);\r\n                    \r\n            let a = slotClickedFunc != undefined ? <span className=\"slot-cell\">{indents}<a className=\"slot-text\" onClick={() => {\r\n                slotClickedFunc(schedulerData, item);\r\n            }}>{item.slotName}</a></span>\r\n                : <span className=\"slot-cell\">{indents}<span className=\"slot-text\">{item.slotName}</span></span>;\r\n            let slotItem = (\r\n                <div title={item.slotName} className=\"overflow-text header2-text\" style={{textAlign: \"left\"}}>\r\n                    {a}\r\n                </div>\r\n            );\r\n            if(!!slotItemTemplateResolver) {\r\n                let temp = slotItemTemplateResolver(schedulerData, item, slotClickedFunc, width, \"overflow-text header2-text\");\r\n                if(!!temp)\r\n                    slotItem = temp;\r\n            }\r\n\r\n            let tdStyle = {height: item.rowHeight};\r\n            if(item.groupOnly) {\r\n                tdStyle = {\r\n                    ...tdStyle,\r\n                    backgroundColor: schedulerData.config.groupOnlySlotColor\r\n                };\r\n            }\r\n\r\n            return (\r\n                <tr key={item.slotId}>\r\n                    <td data-resource-id={item.slotId} style={tdStyle}>\r\n                        {slotItem}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div style={{paddingBottom: paddingBottom}}>\r\n                <table className=\"resource-table\">\r\n                    <tbody>\r\n                        {resourceList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResourceView","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport {CellUnits} from '../Scheduler/Scheduler'\r\n\r\nclass HeaderView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        nonAgendaCellHeaderTemplateResolver : PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const {schedulerData, nonAgendaCellHeaderTemplateResolver} = this.props;\r\n        const {headers, cellUnit, config, localeMoment} = schedulerData;\r\n        let headerHeight = schedulerData.getTableHeaderHeight();\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let minuteStepsInHour = schedulerData.getMinuteStepsInHour();\r\n\r\n        let headerList = [];\r\n        let style = {};\r\n        if(cellUnit === CellUnits.Hour){\r\n            headers.forEach((item, index) => {\r\n                if(index % minuteStepsInHour === 0){\r\n                    let datetime = localeMoment(item.time);\r\n                    const isCurrentTime = datetime.isSame(new Date(), 'hour');\r\n\r\n                    style = !!item.nonWorkingTime ? {width: cellWidth*minuteStepsInHour, color: config.nonWorkingTimeHeadColor, backgroundColor: config.nonWorkingTimeHeadBgColor} : {width: cellWidth*minuteStepsInHour};\r\n\r\n                    if(index === headers.length - minuteStepsInHour)\r\n                        style = !!item.nonWorkingTime ? {color: config.nonWorkingTimeHeadColor, backgroundColor: config.nonWorkingTimeHeadBgColor} : {};\r\n\r\n                    let pFormattedList = config.nonAgendaDayCellHeaderFormat.split('|').map(item => datetime.format(item));\r\n                    let element;\r\n\r\n                    if (typeof nonAgendaCellHeaderTemplateResolver === 'function') {\r\n                        element = nonAgendaCellHeaderTemplateResolver(schedulerData, item, pFormattedList, style)\r\n                    }\r\n                    else {\r\n                        const pList = pFormattedList.map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                        ));\r\n\r\n                        element = (\r\n                            <th key={item.time} className=\"header3-text\" style={style}>\r\n                                <div>\r\n                                    {pList}\r\n                                </div>\r\n                            </th>\r\n                        );\r\n                    }\r\n\r\n                    headerList.push(element);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n           \r\n            headerList = headers.map((item, index) => {\r\n                let datetime = localeMoment(item.time);\r\n                style = !!item.nonWorkingTime ? {width: cellWidth, color: config.nonWorkingTimeHeadColor, backgroundColor: config.nonWorkingTimeHeadBgColor} : {width: cellWidth};\r\n                if(index === headers.length - 1)\r\n                    style = !!item.nonWorkingTime ? {color: config.nonWorkingTimeHeadColor, backgroundColor: config.nonWorkingTimeHeadBgColor} : {};\r\n\r\n                let pFormattedList = config.nonAgendaOtherCellHeaderFormat.split('|').map(item => datetime.format(item));\r\n\r\n                if (typeof nonAgendaCellHeaderTemplateResolver === 'function') {\r\n                    return nonAgendaCellHeaderTemplateResolver(schedulerData, item, pFormattedList, style)\r\n                }\r\n\r\n                const pList = pFormattedList.map((item, index) => (\r\n                    <div key={index}>{item}</div>\r\n                ));\r\n\r\n                return (\r\n                    <th key={item.time} className=\"header3-text\" style={style}>\r\n                        <div>\r\n                            {pList}\r\n                        </div>\r\n                    </th>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <thead>\r\n                <tr style={{height: headerHeight}}>\r\n                    {headerList}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderView\r\n","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nclass BodyView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n    }\r\n\r\n    render() {\r\n\r\n        const {schedulerData} = this.props;\r\n        const {renderData, headers, config, behaviors} = schedulerData;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n\r\n        let displayRenderData = renderData.filter(o => o.render);\r\n        let tableRows = displayRenderData.map((item) => {\r\n            let rowCells = headers.map((header, index) => {\r\n                let key = item.slotId + '_' + header.time;\r\n                let style = index === headers.length - 1 ? {} : {width: cellWidth};\r\n                if(!!header.nonWorkingTime)\r\n                    style = {...style, backgroundColor: config.nonWorkingTimeBodyBgColor};\r\n                if(item.groupOnly)\r\n                    style = {...style, backgroundColor: config.groupOnlySlotColor};\r\n                if(!!behaviors.getNonAgendaViewBodyCellBgColorFunc){\r\n                    let cellBgColor = behaviors.getNonAgendaViewBodyCellBgColorFunc(schedulerData, item.slotId, header);\r\n                    if(!!cellBgColor)\r\n                        style = {...style, backgroundColor: cellBgColor};\r\n                }\r\n                return (\r\n                    <td key={key} style={style}><div></div></td>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <tr key={item.slotId} style={{height: item.rowHeight}}>\r\n                    {rowCells}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <tbody>\r\n                {tableRows}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BodyView","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types' \r\n\r\nclass AddMore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        number: PropTypes.number.isRequired,\r\n        left: PropTypes.number.isRequired,\r\n        width: PropTypes.number.isRequired,\r\n        top: PropTypes.number.isRequired,\r\n        clickAction: PropTypes.func.isRequired,\r\n        headerItem: PropTypes.object.isRequired,\r\n    }\r\n\r\n    render() {\r\n        const {number, left, width, top, clickAction, headerItem, schedulerData} = this.props;\r\n        const {config} = schedulerData;\r\n        let content = '+'+number+'more';\r\n\r\n        return (\r\n        <a className=\"timeline-event\" style={{left: left, width: width, top: top}} onClick={() => {clickAction(headerItem);}} >\r\n            <div style={{height: config.eventItemHeight, color: '#999', textAlign: 'center'}}>\r\n                {content}\r\n            </div>\r\n        </a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddMore","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nclass SelectedArea extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        left: PropTypes.number.isRequired,\r\n        width: PropTypes.number.isRequired,\r\n    }\r\n\r\n    render() {\r\n        const {left, width, schedulerData} = this.props;\r\n        const {config} = schedulerData;\r\n\r\n        return (\r\n            <div className=\"selected-area\" style={{left: left, width: width, top: 0, bottom: 0, backgroundColor: config.selectedAreaColor}}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectedArea","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport AddMore from './AddMore'\r\nimport SelectedArea from '../Calendar/SelectedArea'\r\nimport {CellUnits, DATETIME_FORMAT} from '../Scheduler/Scheduler'\r\nimport {getPos} from '../Scheduler/Util'\r\nimport {DnDTypes} from './DnDTypes'\r\nconst supportTouch = 'ontouchstart' in window;\r\n\r\nclass ResourceEvents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSelecting: false,\r\n            left: 0,\r\n            width: 0,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        resourceEvents: PropTypes.object.isRequired,\r\n        schedulerData: PropTypes.object.isRequired,\r\n        dndSource: PropTypes.object.isRequired,\r\n        onSetAddMoreState: PropTypes.func,\r\n        updateEventStart: PropTypes.func,\r\n        updateEventEnd: PropTypes.func,\r\n        moveEvent: PropTypes.func,\r\n        movingEvent: PropTypes.func,\r\n        conflictOccurred: PropTypes.func,\r\n        subtitleGetter: PropTypes.func,\r\n        eventItemClick: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        newEvent: PropTypes.func,\r\n        eventItemTemplateResolver: PropTypes.func,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {schedulerData} = this.props;\r\n        const {config} = schedulerData;\r\n        if(config.creatable === true) {\r\n            if(supportTouch) {\r\n                // this.eventContainer.addEventListener('touchstart', this.initDrag, false);\r\n            } else {\r\n                this.eventContainer.addEventListener('mousedown', this.initDrag, false);\r\n            }            \r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(np) {\r\n        if(supportTouch) {\r\n            // this.eventContainer.removeEventListener('touchstart', this.initDrag, false);\r\n        } else {\r\n            this.eventContainer.removeEventListener('mousedown', this.initDrag, false);\r\n        }        \r\n        if(np.schedulerData.config.creatable) {\r\n            if(supportTouch) {\r\n                // this.eventContainer.addEventListener('touchstart', this.initDrag, false);\r\n            } else {\r\n                this.eventContainer.addEventListener('mousedown', this.initDrag, false);\r\n            }\r\n        }            \r\n    }\r\n\r\n    initDrag = (ev) => {\r\n        const { isSelecting } = this.state;\r\n        if(isSelecting) return;\r\n        if((ev.srcElement || ev.target) !== this.eventContainer) return;\r\n\r\n        ev.stopPropagation();\r\n        \r\n        const {resourceEvents} = this.props;\r\n        if(resourceEvents.groupOnly) return;\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            if(ev.buttons !== undefined && ev.buttons !== 1) return;\r\n            clientX = ev.clientX;\r\n        }\r\n\r\n        const {schedulerData} = this.props;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let pos = getPos(this.eventContainer);\r\n        let startX = clientX - pos.x;\r\n        let leftIndex = Math.floor(startX/cellWidth);\r\n        let left = leftIndex*cellWidth;\r\n        let rightIndex = Math.ceil(startX/cellWidth);\r\n        let width = (rightIndex - leftIndex)*cellWidth;\r\n\r\n        this.setState({\r\n            startX: startX,\r\n            left: left,\r\n            leftIndex: leftIndex,\r\n            width: width,\r\n            rightIndex: rightIndex,\r\n            isSelecting: true\r\n        });\r\n\r\n        if(supportTouch) {\r\n            document.documentElement.addEventListener('touchmove', this.doDrag, false);\r\n            document.documentElement.addEventListener('touchend', this.stopDrag, false);\r\n            document.documentElement.addEventListener('touchcancel', this.cancelDrag, false);\r\n        } else {\r\n            document.documentElement.addEventListener('mousemove', this.doDrag, false);\r\n            document.documentElement.addEventListener('mouseup', this.stopDrag, false);\r\n        }\r\n        document.onselectstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\tdocument.ondragstart = function () {\r\n\t\t\treturn false;\r\n\t\t};\r\n    }\r\n\r\n    doDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        let clientX = 0;\r\n        if(supportTouch) {\r\n            if(ev.changedTouches.length == 0) return;\r\n            const touch = ev.changedTouches[0];\r\n            clientX = touch.pageX;\r\n        } else {\r\n            clientX = ev.clientX;\r\n        }\r\n        const { startX } = this.state;\r\n        const {schedulerData} = this.props;\r\n        const {headers} = schedulerData;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let pos = getPos(this.eventContainer);\r\n        let currentX = clientX - pos.x;\r\n        let leftIndex = Math.floor(Math.min(startX, currentX)/cellWidth);\r\n        leftIndex = leftIndex < 0 ? 0 : leftIndex;\r\n        let left = leftIndex*cellWidth;\r\n        let rightIndex = Math.ceil(Math.max(startX, currentX)/cellWidth);\r\n        rightIndex = rightIndex > headers.length ? headers.length : rightIndex;\r\n        let width = (rightIndex - leftIndex)*cellWidth;\r\n\r\n        this.setState({\r\n            leftIndex: leftIndex,\r\n            left: left,\r\n            rightIndex: rightIndex,\r\n            width: width,\r\n            isSelecting: true\r\n        });\r\n    }\r\n\r\n    stopDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        const {schedulerData, newEvent, resourceEvents} = this.props;\r\n        const {headers, events, config, cellUnit, localeMoment} = schedulerData;\r\n        const { leftIndex, rightIndex } = this.state;\r\n        if(supportTouch) {\r\n            document.documentElement.removeEventListener('touchmove', this.doDrag, false);\r\n            document.documentElement.removeEventListener('touchend', this.stopDrag, false);\r\n            document.documentElement.removeEventListener('touchcancel', this.cancelDrag, false);\r\n        } else {\r\n            document.documentElement.removeEventListener('mousemove', this.doDrag, false);\r\n            document.documentElement.removeEventListener('mouseup', this.stopDrag, false);\r\n        }\r\n        document.onselectstart = null;\r\n        document.ondragstart = null;\r\n\r\n        let startTime = headers[leftIndex].time;\r\n        let endTime = resourceEvents.headerItems[rightIndex - 1].end;\r\n        if(cellUnit !== CellUnits.Hour)\r\n            endTime = localeMoment(resourceEvents.headerItems[rightIndex - 1].start).hour(23).minute(59).second(59).format(DATETIME_FORMAT);\r\n        let slotId = resourceEvents.slotId;\r\n        let slotName = resourceEvents.slotName;\r\n\r\n        this.setState({\r\n            startX: 0,\r\n            leftIndex: 0,\r\n            left: 0,\r\n            rightIndex: 0,\r\n            width: 0,\r\n            isSelecting: false\r\n        });\r\n\r\n        let hasConflict = false;\r\n        if(config.checkConflict){\r\n            let start = localeMoment(startTime),\r\n                end = localeMoment(endTime);\r\n\r\n            events.forEach((e) =>{\r\n                if(schedulerData._getEventSlotId(e) === slotId) {\r\n                    let eStart = localeMoment(e.start),\r\n                        eEnd = localeMoment(e.end);\r\n                    if((start >= eStart && start < eEnd) || (end > eStart && end <= eEnd) || (eStart >= start && eStart < end) || (eEnd > start && eEnd <= end))\r\n                        hasConflict = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if(hasConflict) {\r\n            const {conflictOccurred} = this.props;\r\n            if(conflictOccurred != undefined){\r\n                conflictOccurred(schedulerData, 'New', {\r\n                    id: undefined,\r\n                    start: startTime,\r\n                    end: endTime,\r\n                    slotId: slotId,\r\n                    slotName: slotName,\r\n                    title: undefined,\r\n                }, DnDTypes.EVENT, slotId, slotName, startTime, endTime);\r\n            }\r\n            else {\r\n                console.log('Conflict occurred, set conflictOccurred func in Scheduler to handle it');\r\n            }\r\n        }\r\n        else {\r\n            if(newEvent != undefined)\r\n                newEvent(schedulerData, slotId, slotName, startTime, endTime);\r\n        }\r\n    }\r\n\r\n    cancelDrag = (ev) => {\r\n        ev.stopPropagation();\r\n\r\n        const { isSelecting } = this.state;\r\n        if(isSelecting) {\r\n            document.documentElement.removeEventListener('touchmove', this.doDrag, false);\r\n            document.documentElement.removeEventListener('touchend', this.stopDrag, false);\r\n            document.documentElement.removeEventListener('touchcancel', this.cancelDrag, false);\r\n            document.onselectstart = null;\r\n            document.ondragstart = null;\r\n            this.setState({\r\n                startX: 0,\r\n                leftIndex: 0,\r\n                left: 0,\r\n                rightIndex: 0,\r\n                width: 0,\r\n                isSelecting: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {resourceEvents, schedulerData, connectDropTarget, dndSource} = this.props;\r\n        const {cellUnit, startDate, endDate, config, localeMoment} = schedulerData;\r\n        const {isSelecting, left, width} = this.state;\r\n        let cellWidth = schedulerData.getContentCellWidth();\r\n        let cellMaxEvents = schedulerData.getCellMaxEvents();\r\n        let rowWidth = schedulerData.getContentTableWidth();\r\n        let DnDEventItem = dndSource.getDragSource();\r\n\r\n        let selectedArea = isSelecting ? <SelectedArea {...this.props} left={left} width={width} /> : <div />;\r\n\r\n        let eventList = [];\r\n        resourceEvents.headerItems.forEach((headerItem, index) => {\r\n\r\n            if (headerItem.count > 0 || headerItem.summary != undefined) {\r\n\r\n               \r\n               \r\n                let renderEventsMaxIndex = headerItem.addMore === 0 ? cellMaxEvents : headerItem.addMoreIndex;\r\n\r\n                headerItem.events.forEach((evt, idx) => {\r\n                    if(idx < renderEventsMaxIndex && evt !== undefined && evt.render) {\r\n                        let durationStart = localeMoment(startDate);\r\n                        let durationEnd = localeMoment(endDate).add(1, 'days');\r\n                        if(cellUnit === CellUnits.Hour){\r\n                            durationStart = localeMoment(startDate).add(config.dayStartFrom, 'hours');\r\n                            durationEnd = localeMoment(endDate).add(config.dayStopTo + 1, 'hours');\r\n                        }\r\n                        let eventStart = localeMoment(evt.eventItem.start);\r\n                        let eventEnd = localeMoment(evt.eventItem.end);\r\n                        let isStart = eventStart >= durationStart;\r\n                        let isEnd = eventEnd <= durationEnd;\r\n                        let left = index*cellWidth + (index > 0 ? 2 : 3);\r\n                        let width = (evt.span * cellWidth - (index > 0 ? 5 : 6)) > 0 ? (evt.span * cellWidth - (index > 0 ? 5 : 6)) : 0;\r\n                        let eventItem = <DnDEventItem\r\n                                                   {...this.props}\r\n                                                   key={evt.eventItem.id}\r\n                                                   eventItem={evt.eventItem}\r\n                                                   isStart={isStart}\r\n                                                   isEnd={isEnd}\r\n                                                   isInPopover={false}\r\n                                                   left={left}\r\n                                                   width={width}\r\n                                                   leftIndex={index}\r\n                                                   rightIndex={index + evt.span}\r\n                                                   />\r\n                        eventList.push(eventItem);\r\n                    }\r\n                });\r\n\r\n                if(headerItem.addMore > 0) {\r\n                    let left = index*cellWidth + (index > 0 ? 2 : 3);\r\n                    let width = cellWidth - (index > 0 ? 5 : 6);\r\n                    let addMoreItem = <AddMore\r\n                                            {...this.props}\r\n                                            key={headerItem.time}\r\n                                            headerItem={headerItem}\r\n                                            number={headerItem.addMore}\r\n                                            left={left}\r\n                                            width={width}\r\n                                            clickAction={this.onAddMoreClick}\r\n                                        />;\r\n                    eventList.push(addMoreItem);\r\n                }\r\n\r\n                if(headerItem.summary != undefined) {\r\n                    let left = index*cellWidth + (index > 0 ? 2 : 3);\r\n                    let width = cellWidth - (index > 0 ? 5 : 6);\r\n                    let key = `${resourceEvents.slotId}_${headerItem.time}`;\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <tr>\r\n                <td style={{width: rowWidth}}>\r\n                    {\r\n                        connectDropTarget(\r\n                            <div ref={this.eventContainerRef} className=\"event-container\" style={{height: resourceEvents.rowHeight}}>\r\n                                {selectedArea}\r\n                                {eventList}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    onAddMoreClick = (headerItem) => {\r\n        const {onSetAddMoreState, resourceEvents, schedulerData} = this.props;\r\n        if(!!onSetAddMoreState){\r\n            const {config} = schedulerData;\r\n            let cellWidth = schedulerData.getContentCellWidth();\r\n            let index = resourceEvents.headerItems.indexOf(headerItem);\r\n            if(index !== -1){\r\n                let left = index*(cellWidth -1);\r\n                let pos = getPos(this.eventContainer);\r\n                left = left + pos.x;\r\n                let top = pos.y;\r\n                let height = (headerItem.count + 1) * config.eventItemLineHeight + 20;\r\n\r\n                onSetAddMoreState({\r\n                    headerItem: headerItem,\r\n                    left: left,\r\n                    top: top,\r\n                    height: height\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    eventContainerRef = (element) => {\r\n        this.eventContainer = element;\r\n    }\r\n}\r\n\r\nexport default ResourceEvents\r\n","const CellUnits = {\r\n    Day: 0,\r\n    Hour: 1\r\n};\r\n\r\nexport default CellUnits\r\n","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport Icon from 'antd/lib/icon'\r\nimport 'antd/lib/grid/style/index.css'\r\nimport EventItem from './EventItem'\r\nimport DnDSource from './DnDSource'\r\n\r\nclass AddMorePopover extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dndSource: new DnDSource((props) => { return props.eventItem;}, EventItem),\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        headerItem: PropTypes.object.isRequired,\r\n        left: PropTypes.number.isRequired,\r\n        top: PropTypes.number.isRequired,\r\n        height: PropTypes.number.isRequired,\r\n        closeAction: PropTypes.func.isRequired,\r\n        subtitleGetter: PropTypes.func,\r\n        moveEvent: PropTypes.func,\r\n        eventItemClick: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        eventItemTemplateResolver: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const {headerItem, left, top, height, closeAction, schedulerData} = this.props;\r\n        const {config, localeMoment} = schedulerData;\r\n        const {time, start, end, events} = headerItem;\r\n        let header = localeMoment(time).format(config.addMorePopoverHeaderFormat);\r\n        let durationStart = localeMoment(start);\r\n        let durationEnd = localeMoment(end);\r\n        let eventList = [];\r\n        let i = 0;\r\n        let DnDEventItem = this.state.dndSource.getDragSource();\r\n        events.forEach((evt) => {\r\n            if(evt !== undefined) {\r\n                i++;\r\n                let eventStart = localeMoment(evt.eventItem.start);\r\n                let eventEnd = localeMoment(evt.eventItem.end);\r\n                let isStart = eventStart >= durationStart;\r\n                let isEnd = eventEnd < durationEnd;\r\n                let eventItemLeft = 10;\r\n                let eventItemWidth = 138;\r\n                let eventItemTop = 12 + i*config.eventItemLineHeight;\r\n                let eventItem = <DnDEventItem\r\n                                   {...this.props}\r\n                                   key={evt.eventItem.id}\r\n                                   eventItem={evt.eventItem}\r\n                                   leftIndex={0}\r\n                                   isInPopover={true}\r\n                                   isStart={isStart}\r\n                                   isEnd={isEnd}\r\n                                   rightIndex={1}\r\n                                   left={eventItemLeft}\r\n                                   width={eventItemWidth}\r\n                                   top={eventItemTop}\r\n                                   />\r\n                eventList.push(eventItem);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className=\"add-more-popover-overlay\"  style={{left: left, top: top, height: height, width: '170px'}}>\r\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                    <Col span=\"22\">\r\n                        <span className=\"base-text\">{header}</span>\r\n                    </Col>\r\n                    <Col span=\"2\">\r\n                        <span onClick={() => {closeAction(undefined);}}><Icon type=\"cross\"></Icon></span>\r\n                    </Col>\r\n                </Row>\r\n                {eventList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddMorePopover","import CalendarTypes from '../Calendar/CalendarTypes'\r\n\r\n\r\nexport default {\r\n    schedulerWidth: '100%',\r\n    besidesWidth: 20,\r\n    schedulerMaxHeight: 0,\r\n    tableHeaderHeight: 40,\r\n\r\n    agendaResourceTableWidth: 160,\r\n    agendaMaxEventWidth: 100,\r\n\r\n    dayResourceTableWidth: 160,\r\n    weekResourceTableWidth: '16%',\r\n    monthResourceTableWidth: 160,\r\n    quarterResourceTableWidth: 160,\r\n    yearResourceTableWidth: 160,\r\n    customResourceTableWidth: 160,\r\n\r\n    dayCellWidth: 30,\r\n    weekCellWidth: '12%',\r\n    monthCellWidth: 80,\r\n    quarterCellWidth: 80,\r\n    yearCellWidth: 80,\r\n    customCellWidth: 80,\r\n\r\n    dayMaxEvents: 99,\r\n    weekMaxEvents: 99,\r\n    monthMaxEvents: 99,\r\n    quarterMaxEvents: 99,\r\n    yearMaxEvents: 99,\r\n    customMaxEvents: 99,\r\n\r\n    eventItemHeight: 22,\r\n    eventItemLineHeight: 24,\r\n    nonAgendaSlotMinHeight: 0,\r\n    dayStartFrom: 0,\r\n    dayStopTo: 23,\r\n    defaultEventBgColor: '#80C5F6',\r\n    selectedAreaColor: '#7EC2F3',\r\n    nonWorkingTimeHeadColor: '#999999',\r\n    nonWorkingTimeHeadBgColor: '#fff0f6',\r\n    nonWorkingTimeBodyBgColor: '#fff0f6',\r\n    summaryColor: '#666',\r\n    groupOnlySlotColor: '#F8F8F8',\r\n\r\n    startResizable: true,\r\n    endResizable: true,\r\n    movable: true,\r\n    creatable: true,\r\n    crossResourceMove: true,\r\n    checkConflict: false,\r\n    scrollToSpecialMomentEnabled: true,\r\n    eventItemPopoverEnabled: true,\r\n    calendarPopoverEnabled: true,\r\n    recurringEventsEnabled: true,\r\n    headerEnabled: true,\r\n    displayWeekend: true,\r\n    relativeMove: true,\r\n    defaultExpanded: true,\r\n\r\n    resourceName: 'Resource Name',\r\n    taskName: 'Task Name',\r\n    agendaViewHeader: 'Agenda',\r\n    addMorePopoverHeaderFormat: 'MMM D, YYYY dddd',\r\n    eventItemPopoverDateFormat: 'MMM D',\r\n    nonAgendaDayCellHeaderFormat: 'ha',\r\n    nonAgendaOtherCellHeaderFormat: 'ddd M/D',\r\n\r\n    minuteStep: 30,\r\n\r\n    views: [\r\n        {viewName: 'Day', viewType: CalendarTypes.Day, showAgenda: false, isEventPerspective: false},\r\n        {viewName: 'Week', viewType: CalendarTypes.Week, showAgenda: false, isEventPerspective: false}\r\n    ],\r\n}\r\n","import {CalendarTypes, CellUnits, DATE_FORMAT} from './Scheduler'\r\n\r\n//getSummary func example\r\nexport const getSummary = (schedulerData, headerEvents, slotId, slotName, headerStart, headerEnd) => {\r\n    return {text: 'Summary', color: 'red', fontSize: '1.2rem'};\r\n}\r\n\r\n//getCustomDate example\r\nexport const getCustomDate = (schedulerData, num, date = undefined) => {\r\n    const {viewType} = schedulerData;\r\n    let selectDate = schedulerData.startDate;\r\n    if(date != undefined)\r\n        selectDate = date;    \r\n    \r\n    let startDate = num === 0 ? selectDate : \r\n        schedulerData.localeMoment(selectDate).add(2*num, 'days').format(DATE_FORMAT),\r\n        endDate = schedulerData.localeMoment(startDate).add(1, 'days').format(DATE_FORMAT),\r\n        cellUnit = CellUnits.Hour;\r\n    if(viewType === CalendarTypes.Custom1) {\r\n        let monday = schedulerData.localeMoment(selectDate).startOf('week').format(DATE_FORMAT);\r\n        startDate = num === 0 ? monday : schedulerData.localeMoment(monday).add(2*num, 'weeks').format(DATE_FORMAT);\r\n        endDate = schedulerData.localeMoment(startDate).add(1, 'weeks').endOf('week').format(DATE_FORMAT);\r\n        cellUnit = CellUnits.Day;\r\n    } else if(viewType === CalendarTypes.Custom2) {\r\n        let firstDayOfMonth = schedulerData.localeMoment(selectDate).startOf('month').format(DATE_FORMAT);\r\n        startDate = num === 0 ? firstDayOfMonth : schedulerData.localeMoment(firstDayOfMonth).add(2*num, 'months').format(DATE_FORMAT);\r\n        endDate = schedulerData.localeMoment(startDate).add(1, 'months').endOf('month').format(DATE_FORMAT);\r\n        cellUnit = CellUnits.Day;\r\n    }\r\n        \r\n    return {\r\n        startDate,\r\n        endDate,\r\n        cellUnit\r\n    };\r\n}\r\n\r\n//getNonAgendaViewBodyCellBgColor example\r\nexport const getNonAgendaViewBodyCellBgColor = (schedulerData, slotId, header) => {\r\n    if(!header.nonWorkingTime) {\r\n        return '#87e8de';\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n//getDateLabel func example\r\nexport const getDateLabel = (schedulerData, viewType, startDate, endDate) => {\r\n    let start = schedulerData.localeMoment(startDate);\r\n    let end = schedulerData.localeMoment(endDate);\r\n    let dateLabel = start.format('MMM D, YYYY');\r\n\r\n    if(viewType === CalendarTypes.Week || (start != end && (\r\n        viewType === CalendarTypes.Custom || viewType === CalendarTypes.Custom1 || viewType === CalendarTypes.Custom2\r\n    ))) {\r\n        dateLabel = `${start.format('MMM D')}-${end.format('D, YYYY')}`;\r\n        if(start.month() !== end.month())\r\n            dateLabel = `${start.format('MMM D')}-${end.format('MMM D, YYYY')}`;\r\n        if(start.year() !== end.year())\r\n            dateLabel = `${start.format('MMM D, YYYY')}-${end.format('MMM D, YYYY')}`;\r\n    }\r\n    else if(viewType === CalendarTypes.Month){\r\n        dateLabel = start.format('MMMM YYYY');\r\n    }\r\n    else if(viewType === CalendarTypes.Quarter){\r\n        dateLabel = `${start.format('MMM D')}-${end.format('MMM D, YYYY')}`;\r\n    }\r\n    else if(viewType === CalendarTypes.Year) {\r\n        dateLabel = start.format('YYYY');\r\n    }\r\n\r\n    return dateLabel;\r\n}\r\n\r\nexport const getEventText = (schedulerData, event) => {\r\n    if(!schedulerData.isEventPerspective) return event.title;\r\n\r\n    let eventText = event.title;\r\n    schedulerData.resources.forEach((item) => {\r\n        if(item.id === event.resourceId) {\r\n            eventText = item.name;\r\n        }\r\n    })\r\n\r\n    return eventText;\r\n}\r\n\r\nexport const getScrollSpecialMoment = (schedulerData, startMoment, endMoment) => {\r\n    // return endMoment;\r\n    const { localeMoment } = schedulerData;\r\n    return localeMoment();\r\n}\r\n\r\nexport const isNonWorkingTime = (schedulerData, time) => {\r\n    const { localeMoment } = schedulerData;\r\n    if(schedulerData.cellUnit === CellUnits.Hour){\r\n        let hour = localeMoment(time).hour();\r\n        if(hour < 9 || hour > 18)\r\n            return true;\r\n    }\r\n    else {\r\n        let dayOfWeek = localeMoment(time).weekday();\r\n        if (dayOfWeek === 0 || dayOfWeek === 6)\r\n            return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default {\r\n    //getSummaryFunc: getSummary,\r\n    getSummaryFunc: undefined,\r\n    //getCustomDateFunc: getCustomDate,\r\n    getCustomDateFunc: undefined,\r\n    // getNonAgendaViewBodyCellBgColorFunc: getNonAgendaViewBodyCellBgColor,\r\n    getNonAgendaViewBodyCellBgColorFunc: undefined, \r\n    getScrollSpecialMomentFunc: getScrollSpecialMoment,\r\n    getDateLabelFunc: getDateLabel,\r\n    getEventTextFunc: getEventText,\r\n    isNonWorkingTimeFunc: isNonWorkingTime,\r\n}\r\n","import moment from 'moment'\r\nimport {RRuleSet,rrulestr} from 'rrule'\r\nimport config from './config'\r\nimport behaviors from './behaviors'\r\nimport {CalendarTypes, CellUnits, DATE_FORMAT, DATETIME_FORMAT} from './Scheduler'\r\n\r\nexport default class SchedulerData {\r\n    constructor(date=moment().format(DATE_FORMAT), viewType = CalendarTypes.Week,\r\n                showAgenda = false, isEventPerspective = false,\r\n                newConfig = undefined, newBehaviors = undefined,\r\n                localeMoment = undefined) {        \r\n        this.resources = [];\r\n        this.events = [];\r\n        this.eventGroups = [];\r\n        this.eventGroupsAutoGenerated = true;\r\n        this.viewType = viewType;\r\n        this.cellUnit = viewType === CalendarTypes.Day ? CellUnits.Hour : CellUnits.Day;\r\n        this.showAgenda = showAgenda;\r\n        this.isEventPerspective = isEventPerspective;\r\n        this.resizing = false;\r\n        this.scrollToSpecialMoment = false;\r\n        this.documentWidth = 0;\r\n\r\n        this.localeMoment = moment;\r\n        if(!!localeMoment)\r\n            this.localeMoment = localeMoment;\r\n        this.config = newConfig == undefined ? config : {...config, ...newConfig};\r\n        this._validateMinuteStep(this.config.minuteStep);\r\n        this.behaviors = newBehaviors == undefined ? behaviors : {...behaviors, ...newBehaviors};\r\n        this._resolveDate(0, date);\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setLocaleMoment(localeMoment){\r\n        if(!!localeMoment){\r\n            this.localeMoment = localeMoment;\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    setResources(resources) {\r\n        this._validateResource(resources);\r\n        this.resources = Array.from(new Set(resources));\r\n        this._createRenderData();\r\n        this.setScrollToSpecialMoment(true);\r\n    }\r\n\r\n    setEventGroupsAutoGenerated(autoGenerated){\r\n        this.eventGroupsAutoGenerated = autoGenerated;\r\n    }\r\n\r\n    //optional\r\n    setEventGroups(eventGroups) {\r\n        this._validateEventGroups(eventGroups);\r\n        this.eventGroups = Array.from(new Set(eventGroups));\r\n        this.eventGroupsAutoGenerated = false;\r\n        this._createRenderData();\r\n        this.setScrollToSpecialMoment(true);\r\n    }\r\n\r\n    setMinuteStep(minuteStep) {\r\n        if(this.config.minuteStep !== minuteStep) {\r\n            this._validateMinuteStep(minuteStep);\r\n            this.config.minuteStep = minuteStep;\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    setBesidesWidth(besidesWidth) {\r\n        if(besidesWidth >= 0) {\r\n            this.config.besidesWidth = besidesWidth;\r\n        }\r\n    }\r\n\r\n    getMinuteStepsInHour(){\r\n        return 60 / this.config.minuteStep;\r\n    }\r\n\r\n    addResource(resource){\r\n        let existedResources = this.resources.filter(x => x.id === resource.id);\r\n        if(existedResources.length === 0){\r\n            this.resources.push(resource);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    addEventGroup(eventGroup){\r\n        let existedEventGroups = this.eventGroups.filter(x => x.id === eventGroup.id);\r\n        if(existedEventGroups.length === 0){\r\n            this.eventGroups.push(eventGroup);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    removeEventGroupById(eventGroupId){\r\n        let index = -1;\r\n        this.eventGroups.forEach((item, idx) => {\r\n            if(item.id === eventGroupId)\r\n                index = idx;\r\n        })\r\n        if(index !== -1)\r\n            this.eventGroups.splice(index, 1);\r\n    }\r\n\r\n    containsEventGroupId(eventGroupId){\r\n        let index = -1;\r\n        this.eventGroups.forEach((item, idx) => {\r\n            if(item.id === eventGroupId)\r\n                index = idx;\r\n        })\r\n        return index !== -1;\r\n    }\r\n\r\n    setEvents(events) {\r\n        this._validateEvents(events);\r\n        this.events = Array.from(events);\r\n        if(this.eventGroupsAutoGenerated)\r\n            this._generateEventGroups();\r\n        if(this.config.recurringEventsEnabled)\r\n           // this._handleRecurringEvents();\r\n        \r\n        this._createRenderData();\r\n    }\r\n\r\n    setScrollToSpecialMoment(scrollToSpecialMoment){\r\n        if(this.config.scrollToSpecialMomentEnabled)\r\n            this.scrollToSpecialMoment = scrollToSpecialMoment;\r\n    }\r\n\r\n    prev() {\r\n        this._resolveDate(-1);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    next() {\r\n        this._resolveDate(1);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setDate(date=moment().format(DATE_FORMAT)){\r\n        this._resolveDate(0, date);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setViewType(viewType = CalendarTypes.Week, showAgenda = false, isEventPerspective = false) {\r\n        this.showAgenda = showAgenda;\r\n        this.isEventPerspective = isEventPerspective;\r\n        this.cellUnit = CellUnits.Day;\r\n\r\n        if(this.viewType !== viewType) {\r\n            let date = this.startDate;\r\n\r\n            if(viewType === CalendarTypes.Custom || viewType === CalendarTypes.Custom1 || viewType === CalendarTypes.Custom2) {\r\n                this.viewType = viewType;\r\n                this._resolveDate(0, date);\r\n            } else {\r\n                if(this.viewType < viewType){\r\n                    if(viewType === CalendarTypes.Week) {\r\n                        this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === CalendarTypes.Month){\r\n                        this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === CalendarTypes.Quarter){\r\n                        this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === CalendarTypes.Year) {\r\n                        this.startDate = this.localeMoment(date).startOf('year').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\r\n                    }\r\n                }\r\n                else{\r\n                    let start = this.localeMoment(this.startDate);\r\n                    let end = this.localeMoment(this.endDate).add(1, 'days');\r\n    \r\n                    if(this.selectDate !== undefined) {\r\n                        let selectDate = this.localeMoment(this.selectDate);\r\n                        if(selectDate >= start && selectDate < end) {\r\n                            date = this.selectDate;\r\n                        }\r\n                    }\r\n    \r\n                    let now = this.localeMoment();\r\n                    if(now >= start && now < end) {\r\n                        date = now.format(DATE_FORMAT);\r\n                    }\r\n    \r\n                    if(viewType === CalendarTypes.Day) {\r\n                        this.startDate = date;\r\n                        this.endDate = this.startDate;\r\n                        this.cellUnit = CellUnits.Hour;\r\n                    }\r\n                    else if(viewType === CalendarTypes.Week) {\r\n                        this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === CalendarTypes.Month){\r\n                        this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === CalendarTypes.Quarter){\r\n                        this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n                    }\r\n                }\r\n\r\n                this.viewType = viewType;\r\n            }\r\n\r\n            this.events = [];\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n            this.setScrollToSpecialMoment(true);\r\n        }\r\n    }\r\n\r\n    setSchedulerMaxHeight(newSchedulerMaxHeight){\r\n        this.config.schedulerMaxHeight = newSchedulerMaxHeight;\r\n    }\r\n\r\n    isSchedulerResponsive() {\r\n        return !!this.config.schedulerWidth.endsWith && this.config.schedulerWidth.endsWith(\"%\");\r\n    }\r\n\r\n    toggleExpandStatus(slotId) {\r\n        let slotEntered = false;\r\n        let slotIndent = -1;\r\n        let isExpanded = false;\r\n        let expandedMap = new Map();\r\n        this.renderData.forEach((item) => {\r\n            if(slotEntered === false) {\r\n                if(item.slotId === slotId && item.hasChildren) {\r\n                    slotEntered = true;\r\n                    \r\n                    isExpanded = !item.expanded;\r\n                    item.expanded = isExpanded;\r\n                    slotIndent = item.indent;\r\n                    expandedMap.set(item.indent, {\r\n                        expanded: item.expanded,\r\n                        render: item.render,\r\n                    });\r\n                }\r\n            } else {\r\n                if(item.indent > slotIndent) {\r\n                    let expandStatus = expandedMap.get(item.indent - 1);\r\n                    item.render = expandStatus.expanded && expandStatus.render;\r\n\r\n                    if(item.hasChildren) {\r\n                        expandedMap.set(item.indent, {\r\n                            expanded: item.expanded,\r\n                            render: item.render,\r\n                        });\r\n                    }\r\n                } else {\r\n                    slotEntered = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    isResourceViewResponsive() {\r\n        let resourceTableWidth = this.getResourceTableConfigWidth();\r\n        return !!resourceTableWidth.endsWith && resourceTableWidth.endsWith(\"%\");\r\n    }\r\n\r\n    isContentViewResponsive() {\r\n        let contentCellWidth = this.getContentCellConfigWidth();\r\n        return !!contentCellWidth.endsWith && contentCellWidth.endsWith(\"%\");\r\n    }\r\n\r\n    getSchedulerWidth() {\r\n        let baseWidth = this.documentWidth - this.config.besidesWidth > 0 ? this.documentWidth - this.config.besidesWidth : 0;\r\n        return this.isSchedulerResponsive() ? parseInt(baseWidth * Number(this.config.schedulerWidth.slice(0,-1)) / 100) : this.config.schedulerWidth;\r\n    }    \r\n\r\n    getResourceTableWidth() {\r\n        let resourceTableConfigWidth = this.getResourceTableConfigWidth();\r\n        let schedulerWidth = this.getSchedulerWidth();\r\n        let resourceTableWidth = this.isResourceViewResponsive() ? parseInt(schedulerWidth * Number(resourceTableConfigWidth.slice(0,-1)) / 100)\r\n            : resourceTableConfigWidth;\r\n        if(this.isSchedulerResponsive() && ( this.getContentTableWidth() + resourceTableWidth < schedulerWidth ))\r\n            resourceTableWidth = schedulerWidth - this.getContentTableWidth();\r\n        return resourceTableWidth;\r\n    }\r\n\r\n    getContentCellWidth(){\r\n        let contentCellConfigWidth = this.getContentCellConfigWidth();\r\n        let schedulerWidth = this.getSchedulerWidth();\r\n        return this.isContentViewResponsive() ? parseInt(schedulerWidth * Number(contentCellConfigWidth.slice(0,-1)) / 100) : contentCellConfigWidth;\r\n    }    \r\n\r\n    getContentTableWidth(){\r\n        return this.headers.length * (this.getContentCellWidth());\r\n    }\r\n\r\n    getScrollToSpecialMoment(){\r\n        if(this.config.scrollToSpecialMomentEnabled)\r\n            return this.scrollToSpecialMoment;\r\n        return false;\r\n    }\r\n\r\n    getSlots(){\r\n        return this.isEventPerspective ? this.eventGroups : this.resources;\r\n    }\r\n\r\n    getSlotById(slotId){\r\n        let slots = this.getSlots();\r\n        let slot = undefined;\r\n        slots.forEach((item) => {\r\n            if(item.id === slotId)\r\n                slot = item;\r\n        })\r\n        return slot;\r\n    }\r\n\r\n    getResourceById(resourceId){\r\n        let resource = undefined;\r\n        this.resources.forEach((item) => {\r\n            if(item.id === resourceId)\r\n                resource = item;\r\n        })\r\n        return resource;\r\n    }\r\n\r\n    getTableHeaderHeight() {\r\n        return this.config.tableHeaderHeight;\r\n    }\r\n\r\n    getSchedulerContentDesiredHeight() {\r\n        let height = 0;\r\n        this.renderData.forEach((item) => {\r\n            if(item.render)\r\n                height += item.rowHeight;\r\n        });\r\n        return height;\r\n    }\r\n\r\n    getCellMaxEvents(){\r\n        return this.viewType === CalendarTypes.Week ? this.config.weekMaxEvents : (\r\n            this.viewType === CalendarTypes.Day ? this.config.dayMaxEvents : (\r\n                this.viewType === CalendarTypes.Month ? this.config.monthMaxEvents : (\r\n                    this.viewType === CalendarTypes.Year ? this.config.yearMaxEvents : (\r\n                        this.viewType === CalendarTypes.Quarter ? this.config.quarterMaxEvents :\r\n                            this.config.customMaxEvents\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    getDateLabel(){\r\n        let start = this.localeMoment(this.startDate);\r\n        let end = this.localeMoment(this.endDate);\r\n        let dateLabel = start.format('LL');\r\n\r\n        if(start != end)\r\n            dateLabel = `${start.format('LL')}-${end.format('LL')}`;\r\n\r\n        if(!!this.behaviors.getDateLabelFunc)\r\n            dateLabel = this.behaviors.getDateLabelFunc(this, this.viewType, this.startDate, this.endDate);\r\n\r\n        return dateLabel;\r\n    }\r\n\r\n    addEvent(newEvent){\r\n        this._attachEvent(newEvent);\r\n        if(this.eventGroupsAutoGenerated)\r\n            this._generateEventGroups();\r\n        this._createRenderData();\r\n    }\r\n\r\n    updateEventStart(event, newStart) {\r\n        this._detachEvent(event);\r\n        event.start = newStart;\r\n        this._attachEvent(event);\r\n        this._createRenderData();\r\n    }\r\n\r\n    updateEventEnd(event, newEnd) {\r\n        event.end = newEnd;\r\n        this._createRenderData();\r\n    }\r\n\r\n    moveEvent(event, newSlotId, newSlotName, newStart, newEnd){\r\n        this._detachEvent(event);\r\n        if(this.isEventPerspective) {\r\n            event.groupId = newSlotId;\r\n            event.groupName = newSlotName;\r\n        }\r\n        else\r\n            event.resourceId = newSlotId;\r\n        event.end = newEnd;\r\n        event.start = newStart;\r\n        this._attachEvent(event);\r\n        this._createRenderData();\r\n    }\r\n\r\n    isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) {\r\n        return eventStart < windowEnd && eventEnd >windowStart;\r\n    }\r\n\r\n    removeEvent(event) {\r\n        let index = this.events.indexOf(event);\r\n        if(index !== -1) {\r\n            this.events.splice(index, 1);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    removeEventById(eventId) {\r\n        let index = -1;\r\n        this.events.forEach((item, idx) => {\r\n            if(item.id === eventId)\r\n                index = idx;\r\n        })\r\n        if(index !== -1) {\r\n            this.events.splice(index, 1);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    getResourceTableConfigWidth() {\r\n        if(this.showAgenda) return this.config.agendaResourceTableWidth;\r\n\r\n        return this.viewType === CalendarTypes.Week ? this.config.weekResourceTableWidth : (\r\n            this.viewType === CalendarTypes.Day ? this.config.dayResourceTableWidth : (\r\n                this.viewType === CalendarTypes.Month ? this.config.monthResourceTableWidth : (\r\n                    this.viewType === CalendarTypes.Year ? this.config.yearResourceTableWidth : (\r\n                        this.viewType === CalendarTypes.Quarter ? this.config.quarterResourceTableWidth :\r\n                            this.config.customResourceTableWidth\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    getContentCellConfigWidth() {\r\n        return this.viewType === CalendarTypes.Week ? this.config.weekCellWidth : (\r\n            this.viewType === CalendarTypes.Day ? this.config.dayCellWidth : (\r\n                this.viewType === CalendarTypes.Month ? this.config.monthCellWidth : (\r\n                    this.viewType === CalendarTypes.Year ? this.config.yearCellWidth : (\r\n                        this.viewType === CalendarTypes.Quarter ? this.config.quarterCellWidth :\r\n                            this.config.customCellWidth\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    _setDocumentWidth(documentWidth) {\r\n        if(documentWidth >= 0) {\r\n            this.documentWidth = documentWidth;\r\n        }\r\n    }\r\n\r\n    _detachEvent(event) {\r\n        let index = this.events.indexOf(event);\r\n        if(index !== -1)\r\n            this.events.splice(index, 1);\r\n    }\r\n\r\n    _attachEvent(event) {\r\n        let pos = 0;\r\n        let eventStart = this.localeMoment(event.start);\r\n        this.events.forEach((item, index) => {\r\n            let start = this.localeMoment(item.start);\r\n            if(eventStart >= start)\r\n                pos = index + 1;\r\n        });\r\n        this.events.splice(pos, 0, event);\r\n    }\r\n\r\n    _handleRecurringEvents(){\r\n        let recurringEvents = this.events.filter(x => !!x.rrule);\r\n        recurringEvents.forEach((item) => {\r\n            this._detachEvent(item);\r\n        });\r\n        \r\n        recurringEvents.forEach((item) => {\r\n            let windowStart = this.localeMoment(this.startDate),\r\n                windowEnd = this.localeMoment(this.endDate).add(1, 'days'),\r\n                oldStart = this.localeMoment(item.start),\r\n                oldEnd = this.localeMoment(item.end),\r\n                rule = rrulestr(item.rrule),\r\n                oldDtstart = undefined,\r\n                oldUntil = rule.origOptions.until || windowEnd.toDate();\r\n            if(!!rule.origOptions.dtstart) {\r\n                oldDtstart = this.localeMoment(rule.origOptions.dtstart);\r\n            }\r\n            //rule.origOptions.dtstart = oldStart.toDate();\r\n            if(windowEnd < oldUntil) {\r\n                rule.origOptions.until = windowEnd.toDate();\r\n            }\r\n                \r\n            //reload\r\n            rule = rrulestr(rule.toString());\r\n            if (item.exdates || item.exrule)\r\n            {\r\n                const rruleSet = new RRuleSet()    \r\n                rruleSet.rrule(rule); \r\n                if(item.exrule) {\r\n                    rruleSet.exrule(rrulestr(item.exrule));\r\n                }\r\n                if(item.exdates) {\r\n                    item.exdates.forEach((exdate) => \r\n                    {\r\n                        rruleSet.exdate(this.localeMoment(exdate).toDate());\r\n                    });\r\n                }\r\n                rule = rruleSet;\r\n            }\r\n            \r\n            let all = rule.all();\r\n            let newEvents = all.map((time, index) => {\r\n                return {\r\n                    ...item,\r\n                    recurringEventId: item.id,\r\n                    recurringEventStart: item.start,\r\n                    recurringEventEnd: item.end,\r\n                    id: `${item.id}-${index}`,\r\n                    start: rule.origOptions.tzid\r\n                      ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).format(DATETIME_FORMAT)\r\n                      : this.localeMoment(time).format(DATETIME_FORMAT),\r\n                    end: rule.origOptions.tzid\r\n                      ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).add(oldEnd.diff(oldStart), 'ms').add(this.localeMoment(oldUntil).utcOffset() - this.localeMoment(item.start).utcOffset(), \"m\").format(DATETIME_FORMAT)\r\n                      : this.localeMoment(time).add(oldEnd.diff(oldStart), 'ms').format(DATETIME_FORMAT)\r\n                };\r\n            });\r\n            newEvents.forEach((newEvent) => {\r\n                let eventStart = this.localeMoment(newEvent.start),\r\n                    eventEnd = this.localeMoment(newEvent.end);\r\n                if(this.isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) && (!oldDtstart || eventStart >= oldDtstart)) {\r\n                    this._attachEvent(newEvent);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    _resolveDate(num, date = undefined){\r\n        if(date != undefined)\r\n            this.selectDate = this.localeMoment(date).format(DATE_FORMAT);\r\n\r\n        if(this.viewType === CalendarTypes.Week) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('week').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'weeks').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === CalendarTypes.Day) {\r\n            this.startDate = date != undefined ? this.selectDate\r\n                : this.localeMoment(this.startDate).add(num, 'days').format(DATE_FORMAT);\r\n            this.endDate = this.startDate;\r\n        }\r\n        else if(this.viewType === CalendarTypes.Month) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('month').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'months').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === CalendarTypes.Quarter) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('quarter').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'quarters').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === CalendarTypes.Year) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('year').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'years').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === CalendarTypes.Custom || this.viewType === CalendarTypes.Custom1 || this.viewType === CalendarTypes.Custom2) {\r\n            if(this.behaviors.getCustomDateFunc != undefined){\r\n                let customDate = this.behaviors.getCustomDateFunc(this, num, date);\r\n                this.startDate = customDate.startDate;\r\n                this.endDate = customDate.endDate;\r\n                if(!!customDate.cellUnit)\r\n                    this.cellUnit = customDate.cellUnit;\r\n            } else {\r\n                throw new Error('This is custom view type, set behaviors.getCustomDateFunc func to resolve the time window(startDate and endDate) yourself');\r\n            }\r\n        }\r\n    }\r\n\r\n    _createHeaders() {\r\n        let headers = [],\r\n            start = this.localeMoment(this.startDate),\r\n            end = this.localeMoment(this.endDate),\r\n            header = start;\r\n\r\n        if(this.showAgenda){\r\n            headers.push({time: header.format(DATETIME_FORMAT), nonWorkingTime: false});\r\n        }\r\n        else {\r\n            if (this.cellUnit === CellUnits.Hour) {\r\n                start = start.add(this.config.dayStartFrom, 'hours');\r\n                end = end.add(this.config.dayStopTo, 'hours');\r\n                header = start;\r\n\r\n                while (header >= start && header <= end) {\r\n                    let minuteSteps = this.getMinuteStepsInHour();\r\n                    for(let i=0; i<minuteSteps; i++){\r\n                        let hour = header.hour();\r\n                        if(hour >= this.config.dayStartFrom && hour <= this.config.dayStopTo) {\r\n                            let time = header.format(DATETIME_FORMAT);\r\n                            let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\r\n                            headers.push({ time: time, nonWorkingTime: nonWorkingTime });\r\n                        }\r\n    \r\n                        header = header.add(this.config.minuteStep, 'minutes');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (header >= start && header <= end) {\r\n                    let time = header.format(DATETIME_FORMAT);\r\n                    let dayOfWeek = header.weekday();\r\n                    if( this.config.displayWeekend || (dayOfWeek !== 0 && dayOfWeek !== 6))\r\n                    {\r\n                        let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\r\n                        headers.push({ time: time, nonWorkingTime: nonWorkingTime });\r\n                    }\r\n\r\n                    header = header.add(1, 'days');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.headers = headers;\r\n    }\r\n\r\n    _createInitHeaderEvents(header) {\r\n        let start = this.localeMoment(header.time),\r\n            startValue = start.format(DATETIME_FORMAT);\r\n        let endValue = this.showAgenda ? (this.viewType === CalendarTypes.Week ? start.add(1, 'weeks').format(DATETIME_FORMAT) : (\r\n            this.viewType === CalendarTypes.Day ? start.add(1, 'days').format(DATETIME_FORMAT) : (\r\n                this.viewType === CalendarTypes.Month ? start.add(1, 'months').format(DATETIME_FORMAT) : (\r\n                    this.viewType === CalendarTypes.Year ? start.add(1, 'years').format(DATETIME_FORMAT) : (\r\n                        this.viewType === CalendarTypes.Quarter ? start.add(1, 'quarters').format(DATETIME_FORMAT) :\r\n                            this.localeMoment(this.endDate).add(1, 'days').format(DATETIME_FORMAT)\r\n                    )\r\n                )\r\n            )\r\n        )) : (this.cellUnit === CellUnits.Hour ?  start.add(this.config.minuteStep, 'minutes').format(DATETIME_FORMAT)\r\n            : start.add(1, 'days').format(DATETIME_FORMAT));\r\n        return {\r\n            time:  header.time,\r\n            nonWorkingTime: header.nonWorkingTime,\r\n            start: startValue,\r\n            end:   endValue,\r\n            count: 0,\r\n            addMore: 0,\r\n            addMoreIndex: 0,\r\n            events: [,,,],\r\n        };\r\n    }\r\n\r\n    _createHeaderEvent(render, span, eventItem) {\r\n        return {\r\n            render: render,\r\n            span: span,\r\n            eventItem: eventItem\r\n        };\r\n    }\r\n\r\n    _getEventSlotId(event){\r\n        return this.isEventPerspective ? this._getEventGroupId(event) : event.resourceId;\r\n    }\r\n\r\n    _getEventGroupId(event){\r\n        return !!event.groupId ? event.groupId.toString() : event.id.toString();\r\n    }\r\n\r\n    _getEventGroupName(event){\r\n        return !!event.groupName ? event.groupName : event.title;\r\n    }\r\n\r\n    _generateEventGroups(){\r\n        let eventGroups = [];\r\n        let set = new Set();\r\n        this.events.forEach((item) => {\r\n            let groupId = this._getEventGroupId(item);\r\n            let groupName = this._getEventGroupName(item);\r\n\r\n            if(!set.has(groupId)){\r\n                eventGroups.push({\r\n                    id: groupId,\r\n                    name: groupName,\r\n                    state: item,\r\n                });\r\n                set.add(groupId);\r\n            }\r\n        })\r\n        this.eventGroups = eventGroups;\r\n    }\r\n\r\n    _createInitRenderData(isEventPerspective, eventGroups, resources, headers) {\r\n        let slots = isEventPerspective ? eventGroups : resources;\r\n        let slotTree = [],\r\n            slotMap = new Map();\r\n        slots.forEach((slot) => {\r\n            let headerEvents = headers.map((header) => {\r\n                return this._createInitHeaderEvents(header);\r\n            });\r\n\r\n            let slotRenderData = {\r\n                slotId: slot.id,\r\n                slotName: slot.name,\r\n                parentId: slot.parentId,\r\n                groupOnly: slot.groupOnly,\r\n                hasSummary: false,\r\n                rowMaxCount: 0,\r\n                rowHeight: this.config.nonAgendaSlotMinHeight !== 0 ? this.config.nonAgendaSlotMinHeight : this.config.eventItemLineHeight + 2,\r\n                headerItems: headerEvents,\r\n                indent: 0,\r\n                hasChildren: false,\r\n                expanded: true,\r\n                render: true,\r\n            };\r\n            let id = slot.id;\r\n            let value = undefined;\r\n            if(slotMap.has(id)) {\r\n                value = slotMap.get(id);\r\n                value.data = slotRenderData;\r\n            } else {\r\n                value = {\r\n                    data: slotRenderData,\r\n                    children: [],\r\n                };\r\n                slotMap.set(id, value);\r\n            }\r\n\r\n            let parentId = slot.parentId;\r\n            if(!parentId || parentId === id) {\r\n                slotTree.push(value);\r\n            } else {\r\n                let parentValue = undefined;\r\n                if(slotMap.has(parentId)) {\r\n                    parentValue = slotMap.get(parentId);\r\n                } else {\r\n                    parentValue = {\r\n                        data: undefined,\r\n                        children: [],\r\n                    };\r\n                    slotMap.set(parentId, parentValue);\r\n                }\r\n\r\n                parentValue.children.push(value);\r\n            }\r\n        });\r\n\r\n        let slotStack = [];\r\n        let i;\r\n        for(i=slotTree.length-1; i>=0; i--) {\r\n            slotStack.push(slotTree[i]);\r\n        }\r\n        let initRenderData = [];\r\n        let currentNode = undefined;\r\n        while(slotStack.length > 0) {\r\n            currentNode = slotStack.pop();\r\n            if(currentNode.data.indent > 0) {\r\n                currentNode.data.render = this.config.defaultExpanded;\r\n            }\r\n            if(currentNode.children.length > 0) {\r\n                currentNode.data.hasChildren = true;\r\n                currentNode.data.expanded = this.config.defaultExpanded;\r\n            }\r\n            initRenderData.push(currentNode.data);\r\n            \r\n            for(i=currentNode.children.length -1; i>=0; i--) {\r\n                currentNode.children[i].data.indent = currentNode.data.indent + 1;\r\n                slotStack.push(currentNode.children[i]);\r\n            }\r\n        }\r\n\r\n        return initRenderData;\r\n    }\r\n\r\n    _getSpan(startTime, endTime, headers){\r\n        if(this.showAgenda) return 1;\r\n\r\n        let start = this.localeMoment(startTime),\r\n            end = this.localeMoment(endTime),\r\n            span = 0;\r\n\r\n        for(let header of headers) {\r\n            let spanStart = this.localeMoment(header.time),\r\n            spanEnd = this.cellUnit === CellUnits.Hour ? this.localeMoment(header.time).add(this.config.minuteStep, 'minutes') \r\n                : this.localeMoment(header.time).add(1, 'days');\r\n            \r\n                if(spanStart < end && spanEnd > start) {\r\n                    span++;\r\n                }\r\n        }\r\n\r\n        return span;\r\n    }\r\n\r\n    _validateResource(resources){\r\n        if(Object.prototype.toString.call(resources) !== \"[object Array]\") {\r\n            throw new Error('Resources should be Array object');\r\n        }\r\n\r\n        resources.forEach((item, index) => {\r\n            if(item == undefined) {\r\n                console.error(`Resource undefined: ${index}`);\r\n                throw new Error(`Resource undefined: ${index}`);\r\n            }\r\n            if(item.id == undefined || item.name == undefined)\r\n            {\r\n                console.error('Resource property missed', index, item);\r\n                throw new Error(`Resource property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateEventGroups(eventGroups){\r\n        if(Object.prototype.toString.call(eventGroups) !== \"[object Array]\") {\r\n            throw new Error('Event groups should be Array object');\r\n        }\r\n\r\n        eventGroups.forEach((item, index) => {\r\n            if(item == undefined) {\r\n                console.error(`Event group undefined: ${index}`);\r\n                throw new Error(`Event group undefined: ${index}`);\r\n            }\r\n            if(item.id == undefined || item.name == undefined)\r\n            {\r\n                console.error('Event group property missed', index, item);\r\n                throw new Error(`Event group property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateEvents(events){\r\n        if(Object.prototype.toString.call(events) !== \"[object Array]\") {\r\n            throw new Error('Events should be Array object');\r\n        }\r\n\r\n        events.forEach((e, index) => {\r\n            if(e == undefined) {\r\n                console.error(`Event undefined: ${index}`);\r\n                throw new Error(`Event undefined: ${index}`);\r\n            }\r\n            if(e.id == undefined || e.resourceId == undefined || e.title == undefined || e.start == undefined || e.end == undefined)\r\n            {\r\n                console.error('Event property missed', index, e);\r\n                throw new Error(`Event property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateMinuteStep(minuteStep) {\r\n        if (60 % minuteStep !== 0) {\r\n            console.error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\r\n            throw new Error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\r\n        }\r\n    }\r\n\r\n    _compare(event1, event2){\r\n        let start1 = this.localeMoment(event1.start), start2 = this.localeMoment(event2.start);\r\n        if(start1 !== start2) return start1 < start2 ? -1 : 1;\r\n\r\n        let end1 = this.localeMoment(event1.end), end2 = this.localeMoment(event2.end);\r\n        if(end1 !== end2) return end1 < end2 ? -1 : 1;\r\n\r\n        return event1.id < event2.id ? -1 : 1;\r\n    }\r\n\r\n    _createRenderData() {\r\n        let initRenderData = this._createInitRenderData(this.isEventPerspective, this.eventGroups, this.resources, this.headers);\r\n        //this.events.sort(this._compare);\r\n        let cellMaxEventsCount = this.getCellMaxEvents();        \r\n        const cellMaxEventsCountValue = 30;\r\n\r\n        this.events.forEach((item) => {\r\n            let resourceEventsList = initRenderData.filter(x => x.slotId === this._getEventSlotId(item));\r\n            if(resourceEventsList.length > 0) {\r\n                let resourceEvents = resourceEventsList[0];\r\n                let span = this._getSpan(item.start, item.end, this.headers);\r\n                let eventStart = this.localeMoment(item.start), eventEnd = this.localeMoment(item.end);\r\n                let pos = -1;\r\n\r\n                resourceEvents.headerItems.forEach((header, index) => {\r\n                    let headerStart = this.localeMoment(header.start), headerEnd = this.localeMoment(header.end);\r\n                    if(headerEnd > eventStart && headerStart < eventEnd) {\r\n                        header.count = header.count + 1;\r\n                        if(header.count > resourceEvents.rowMaxCount) {\r\n                            resourceEvents.rowMaxCount = header.count;\r\n                            let rowsCount = (cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount) ? cellMaxEventsCount : resourceEvents.rowMaxCount;\r\n                            let newRowHeight = rowsCount * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\r\n                            if(newRowHeight > resourceEvents.rowHeight)\r\n                                resourceEvents.rowHeight = newRowHeight;\r\n                        }\r\n\r\n                        if(pos === -1)\r\n                        {\r\n                            let tmp = 0;\r\n                            while (header.events[tmp] !== undefined)\r\n                                tmp++;\r\n\r\n                            pos = tmp;\r\n                        }\r\n                        let render = headerStart <= eventStart || index === 0;\r\n                        if(render === false){\r\n                            let previousHeader = resourceEvents.headerItems[index - 1];\r\n                            let previousHeaderStart = this.localeMoment(previousHeader.start), previousHeaderEnd = this.localeMoment(previousHeader.end);\r\n                            if(previousHeaderEnd <= eventStart || previousHeaderStart >= eventEnd)\r\n                                render = true;\r\n                        }\r\n                        header.events[pos] = this._createHeaderEvent(render, span, item);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if(cellMaxEventsCount <= cellMaxEventsCountValue || this.behaviors.getSummaryFunc !== undefined) {\r\n            initRenderData.forEach((resourceEvents) => {\r\n                let hasSummary = false;\r\n\r\n                resourceEvents.headerItems.forEach((headerItem) => {\r\n                    if(cellMaxEventsCount <= cellMaxEventsCountValue) {\r\n                        let renderItemsCount = 0, addMoreIndex = 0, index = 0;\r\n                        while (index < cellMaxEventsCount - 1) {\r\n                            if(headerItem.events[index] !== undefined) {\r\n                                renderItemsCount++;\r\n                                addMoreIndex = index + 1;\r\n                            }\r\n        \r\n                            index++;\r\n                        }\r\n        \r\n                        if(headerItem.events[index] !== undefined) {\r\n                            if(renderItemsCount + 1 < headerItem.count) {\r\n                                headerItem.addMore = headerItem.count - renderItemsCount;\r\n                                headerItem.addMoreIndex = addMoreIndex;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if(renderItemsCount < headerItem.count) {\r\n                                headerItem.addMore = headerItem.count - renderItemsCount;\r\n                                headerItem.addMoreIndex = addMoreIndex;\r\n                            }\r\n                        }\r\n                    }                    \r\n    \r\n                    if(this.behaviors.getSummaryFunc !== undefined){\r\n                        let events = [];\r\n                        headerItem.events.forEach((e) => {\r\n                            if(!!e && !!e.eventItem)\r\n                                events.push(e.eventItem);\r\n                        });\r\n    \r\n                        headerItem.summary = this.behaviors.getSummaryFunc(this, events, resourceEvents.slotId, resourceEvents.slotName, headerItem.start, headerItem.end);\r\n                        if(!!headerItem.summary && headerItem.summary.text != undefined)\r\n                            hasSummary = true;\r\n                    }\r\n                });\r\n    \r\n                resourceEvents.hasSummary = hasSummary;\r\n                if(hasSummary) {\r\n                    let rowsCount = (cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount) ? cellMaxEventsCount : resourceEvents.rowMaxCount;\r\n                    let newRowHeight = (rowsCount + 1) * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\r\n                    if(newRowHeight > resourceEvents.rowHeight)\r\n                        resourceEvents.rowHeight = newRowHeight;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.renderData = initRenderData;\r\n    }\r\n\r\n    _startResizing() {\r\n        this.resizing = true;\r\n    }\r\n\r\n    _stopResizing() {\r\n        this.resizing = false;\r\n    }\r\n\r\n    _isResizing() {\r\n        return this.resizing;\r\n    }\r\n}\r\n\r\n\r\n","const DemoData = {\r\n\tresources: [\r\n\t\t{\r\n\t\t\tid: 'w0',\r\n\t\t\tname: 'Workstation 1',\r\n\t\t\tgroupOnly: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'm1',\r\n\t\t\tname: 'Machine1',\r\n\t\t\tparentId: 'w0',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'm2',\r\n\t\t\tname: 'Machine2',\r\n\t\t\tparentId: 'w0',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'm3',\r\n\t\t\tname: 'Machine3',\r\n\t\t\tparentId: 'w0',\r\n\t\t},\r\n\t],\r\n\tevents: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tstart: '2019-12-18 09:30:00',\r\n\t\t\tend: '2019-12-18 23:30:00',\r\n\t\t\tresourceId: 'm1',\r\n\t\t\ttitle: 'Event Successfully finished',\r\n\t\t\tbgColor: '#32CD32',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tstart: '2019-12-18 10:30:00',\r\n\t\t\tend: '2020-02-26 23:30:00',\r\n\t\t\tresourceId: 'm2',\r\n\t\t\ttitle: 'Event with Error',\r\n\t\t\tbgColor: \"#FF0000\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tstart: '2019-12-18 02:30:00',\r\n\t\t\tend: '2019-12-18 10:30:00',\r\n\t\t\tresourceId: 'm3',\r\n\t\t\ttitle: 'Event in progress',\r\n\t\t\tbgColor: '#FFFF00'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tstart: '2019-12-19 07:30:00',\r\n\t\t\tend: '2019-12-19 23:30:00',\r\n\t\t\tresourceId: 'm3',\r\n\t\t\ttitle: 'Event Successfully finished',\r\n\t\t\tbgColor: '#32CD32',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tstart: '2019-12-19 07:30:00',\r\n\t\t\tend: '2019-12-19 10:30:00',\r\n\t\t\tresourceId: 'm1',\r\n\t\t\ttitle: 'Event in progress',\r\n\t\t\tbgColor: '#FFFF00'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tstart: '2019-12-17 07:30:00',\r\n\t\t\tend: '2019-12-17 10:30:00',\r\n\t\t\tresourceId: 'm1',\r\n\t\t\ttitle: 'Event in progress',\r\n\t\t\tbgColor: '#FFFF00'\r\n\t\t},\r\n\t],\r\n\teventsForTaskView: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tstart: '2017-12-18 09:30:00',\r\n\t\t\tend: '2017-12-18 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'I am finished',\r\n\t\t\tbgColor: '#D9D9D9',\r\n\t\t\tgroupId: 1,\r\n\t\t\tgroupName: 'Task1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tstart: '2017-12-18 12:30:00',\r\n\t\t\tend: '2017-12-26 23:30:00',\r\n\t\t\tresourceId: 'r2',\r\n\t\t\ttitle: 'I am not resizable',\r\n\t\t\tresizable: false,\r\n\t\t\tgroupId: 2,\r\n\t\t\tgroupName: 'Task2'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tstart: '2017-12-19 12:30:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r3',\r\n\t\t\ttitle: 'I am not movable',\r\n\t\t\tmovable: false,\r\n\t\t\tgroupId: 3,\r\n\t\t\tgroupName: 'Task3'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 7,\r\n\t\t\tstart: '2017-12-19 15:40:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r7',\r\n\t\t\ttitle: 'I am exceptional',\r\n\t\t\tbgColor: '#FA9E95',\r\n\t\t\tgroupId: 4,\r\n\t\t\tgroupName: 'Task4'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tstart: '2017-12-20 14:30:00',\r\n\t\t\tend: '2017-12-21 23:30:00',\r\n\t\t\tresourceId: 'r4',\r\n\t\t\ttitle: 'I am not start-resizable',\r\n\t\t\tstartResizable: false,\r\n\t\t\tgroupId: 1,\r\n\t\t\tgroupName: 'Task1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tstart: '2017-12-21 15:30:00',\r\n\t\t\tend: '2017-12-22 23:30:00',\r\n\t\t\tresourceId: 'r5',\r\n\t\t\ttitle: 'I am not end-resizable',\r\n\t\t\tendResizable: false,\r\n\t\t\tgroupId: 3,\r\n\t\t\tgroupName: 'Task3'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 9,\r\n\t\t\tstart: '2017-12-21 16:30:00',\r\n\t\t\tend: '2017-12-21 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'R1 has many tasks',\r\n\t\t\tgroupId: 4,\r\n\t\t\tgroupName: 'Task4'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tstart: '2017-12-22 15:35:00',\r\n\t\t\tend: '2017-12-23 23:30:00',\r\n\t\t\tresourceId: 'r6',\r\n\t\t\ttitle: 'I am normal',\r\n\t\t\tgroupId: 1,\r\n\t\t\tgroupName: 'Task1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 8,\r\n\t\t\tstart: '2017-12-25 15:50:00',\r\n\t\t\tend: '2017-12-26 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'I am locked',\r\n\t\t\tmovable: false,\r\n\t\t\tresizable: false,\r\n\t\t\tbgColor: 'red',\r\n\t\t\tgroupId: 1,\r\n\t\t\tgroupName: 'Task1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 10,\r\n\t\t\tstart: '2017-12-26 18:30:00',\r\n\t\t\tend: '2017-12-26 23:30:00',\r\n\t\t\tresourceId: 'r2',\r\n\t\t\ttitle: 'R2 has many tasks',\r\n\t\t\tgroupId: 4,\r\n\t\t\tgroupName: 'Task4'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 11,\r\n\t\t\tstart: '2017-12-27 18:30:00',\r\n\t\t\tend: '2017-12-27 23:30:00',\r\n\t\t\tresourceId: 'r14',\r\n\t\t\ttitle: 'R4 has many tasks',\r\n\t\t\tgroupId: 4,\r\n\t\t\tgroupName: 'Task4'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 12,\r\n\t\t\tstart: '2017-12-28 18:30:00',\r\n\t\t\tend: '2017-12-28 23:30:00',\r\n\t\t\tresourceId: 'r6',\r\n\t\t\ttitle: 'R6 has many tasks',\r\n\t\t\tgroupId: 3,\r\n\t\t\tgroupName: 'Task3'\r\n\t\t},\r\n\t],\r\n\teventsForCustomEventStyle: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tstart: '2017-12-18 09:30:00',\r\n\t\t\tend: '2017-12-19 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'I am finished',\r\n\t\t\tbgColor: '#D9D9D9',\r\n\t\t\ttype: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tstart: '2017-12-18 12:30:00',\r\n\t\t\tend: '2017-12-26 23:30:00',\r\n\t\t\tresourceId: 'r2',\r\n\t\t\ttitle: 'I am not resizable',\r\n\t\t\tresizable: false,\r\n\t\t\ttype: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tstart: '2017-12-19 12:30:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r3',\r\n\t\t\ttitle: 'I am not movable',\r\n\t\t\tmovable: false,\r\n\t\t\ttype: 3\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tstart: '2017-12-19 14:30:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r4',\r\n\t\t\ttitle: 'I am not start-resizable',\r\n\t\t\tstartResizable: false,\r\n\t\t\ttype: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tstart: '2017-12-19 15:30:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r5',\r\n\t\t\ttitle: 'I am not end-resizable',\r\n\t\t\tendResizable: false,\r\n\t\t\ttype: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tstart: '2017-12-19 15:35:00',\r\n\t\t\tend: '2017-12-19 23:30:00',\r\n\t\t\tresourceId: 'r6',\r\n\t\t\ttitle: 'I am normal',\r\n\t\t\ttype: 3\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 7,\r\n\t\t\tstart: '2017-12-19 15:40:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r7',\r\n\t\t\ttitle: 'I am exceptional',\r\n\t\t\tbgColor: '#FA9E95',\r\n\t\t\ttype: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 8,\r\n\t\t\tstart: '2017-12-19 15:50:00',\r\n\t\t\tend: '2017-12-19 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'I am locked',\r\n\t\t\tmovable: false,\r\n\t\t\tresizable: false,\r\n\t\t\tbgColor: 'red',\r\n\t\t\ttype: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 9,\r\n\t\t\tstart: '2017-12-19 16:30:00',\r\n\t\t\tend: '2017-12-27 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'R1 has many tasks 1',\r\n\t\t\ttype: 3\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 10,\r\n\t\t\tstart: '2017-12-20 18:30:00',\r\n\t\t\tend: '2017-12-20 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'R1 has many tasks 2',\r\n\t\t\ttype: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 11,\r\n\t\t\tstart: '2017-12-21 18:30:00',\r\n\t\t\tend: '2017-12-22 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'R1 has many tasks 3',\r\n\t\t\ttype: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 12,\r\n\t\t\tstart: '2017-12-23 18:30:00',\r\n\t\t\tend: '2017-12-27 23:30:00',\r\n\t\t\tresourceId: 'r1',\r\n\t\t\ttitle: 'R1 has many tasks 4',\r\n\t\t\ttype: 3\r\n\t\t},\r\n\t],\r\n}\r\n\r\nexport default DemoData\r\n","import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport Icon from 'antd/lib/icon'\r\nimport 'antd/lib/select/style/index.css'\r\nimport 'antd/lib/grid/style/index.css'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style/index.css'\r\nimport Popover from 'antd/lib/popover'\r\nimport 'antd/lib/popover/style/index.css'\r\nimport Calendar from 'antd/lib/calendar'\r\nimport 'antd/lib/calendar/style/index.css'\r\nimport EventItem from '../Events/EventItem'\r\nimport DnDSource from '../Events/DnDSource'\r\nimport DnDContext from '../Events/DnDContext'\r\nimport ResourceView from '../Resources/ResourceView'\r\nimport HeaderView from '../Calendar/HeaderView'\r\nimport BodyView from '../Calendar/BodyView'\r\nimport ResourceEvents from '../Events/ResourceEvents'\r\nimport AddMorePopover from '../Events/AddMorePopover'\r\nimport CalendarTypes from '../Calendar/CalendarTypes'\r\nimport CellUnits from '../Calendar/CellUnits'\r\nimport SchedulerData from './SchedulerData'\r\nimport DemoData from '../Events/DemoData'\r\n\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass Scheduler extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tconst {schedulerData, dndSources} = props;\r\n\t\tlet sources = [];\r\n\t\tsources.push(new DnDSource((props) => {\r\n\t\t\treturn props.eventItem;\r\n\t\t}, EventItem));\r\n\t\tif (dndSources != undefined && dndSources.length > 0) {\r\n\t\t\tsources = [...sources, ...dndSources];\r\n\t\t}\r\n\t\tlet dndContext = new DnDContext(sources, ResourceEvents);\r\n\t\t\r\n\t\tthis.currentArea = -1;\r\n\t\tschedulerData._setDocumentWidth(document.documentElement.clientWidth);\r\n\t\tthis.state = {\r\n\t\t\tvisible: false,\r\n\t\t\tdndContext: dndContext,\r\n\t\t\tcontentHeight: schedulerData.getSchedulerContentDesiredHeight(),\r\n\t\t\tcontentScrollbarHeight: 17,\r\n\t\t\tcontentScrollbarWidth: 17,\r\n\t\t\tresourceScrollbarHeight: 17,\r\n\t\t\tresourceScrollbarWidth: 17,\r\n\t\t\tscrollLeft: 0,\r\n\t\t\tscrollTop: 0,\r\n\t\t\tdocumentWidth: document.documentElement.clientWidth,\r\n\t\t\tdocumentHeight: document.documentElement.clientHeight,\r\n\t\t};\r\n\t\t\r\n\t\tif (schedulerData.isSchedulerResponsive())\r\n\t\t\twindow.onresize = this.onWindowResize;\r\n\t}\r\n\t\r\n\tonWindowResize = (e) => {\r\n\t\tconst {schedulerData} = this.props;\r\n\t\tschedulerData._setDocumentWidth(document.documentElement.clientWidth);\r\n\t\tthis.setState({\r\n\t\t\tdocumentWidth: document.documentElement.clientWidth,\r\n\t\t\tdocumentHeight: document.documentElement.clientHeight,\r\n\t\t});\r\n\t}\r\n\t\r\n\tstatic propTypes = {\r\n\t\tschedulerData: PropTypes.object.isRequired,\r\n\t\tprevClick: PropTypes.func.isRequired,\r\n\t\tnextClick: PropTypes.func.isRequired,\r\n\t\tonViewChange: PropTypes.func.isRequired,\r\n\t\tonSelectDate: PropTypes.func.isRequired,\r\n\t\tonSetAddMoreState: PropTypes.func,\r\n\t\tupdateEventStart: PropTypes.func,\r\n\t\tupdateEventEnd: PropTypes.func,\r\n\t\tmoveEvent: PropTypes.func,\r\n\t\tmovingEvent: PropTypes.func,\r\n\t\tleftCustomHeader: PropTypes.object,\r\n\t\trightCustomHeader: PropTypes.object,\r\n\t\tnewEvent: PropTypes.func,\r\n\t\tsubtitleGetter: PropTypes.func,\r\n\t\teventItemClick: PropTypes.func,\r\n\t\tviewEventClick: PropTypes.func,\r\n\t\tviewEventText: PropTypes.string,\r\n\t\tviewEvent2Click: PropTypes.func,\r\n\t\tviewEvent2Text: PropTypes.string,\r\n\t\tconflictOccurred: PropTypes.func,\r\n\t\teventItemTemplateResolver: PropTypes.func,\r\n\t\tdndSources: PropTypes.array,\r\n\t\tslotClickedFunc: PropTypes.func,\r\n\t\ttoggleExpandFunc: PropTypes.func,\r\n\t\tslotItemTemplateResolver: PropTypes.func,\r\n\t\tnonAgendaCellHeaderTemplateResolver: PropTypes.func,\r\n\t\tonScrollLeft: PropTypes.func,\r\n\t\tonScrollRight: PropTypes.func,\r\n\t\tonScrollTop: PropTypes.func,\r\n\t\tonScrollBottom: PropTypes.func,\r\n\t}\r\n\t\r\n\tcomponentDidMount(props, state) {\r\n\t\tthis.resolveScrollbarSize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(props, state) {\r\n\t\tthis.resolveScrollbarSize();\r\n\t\t\r\n\t\tconst {schedulerData} = this.props;\r\n\t\tconst {localeMoment, behaviors} = schedulerData;\r\n\t\tif (schedulerData.getScrollToSpecialMoment() && !!behaviors.getScrollSpecialMomentFunc) {\r\n\t\t\tif (!!this.schedulerContent && this.schedulerContent.scrollWidth > this.schedulerContent.clientWidth) {\r\n\t\t\t\tlet start = localeMoment(schedulerData.startDate).startOf('day'),\r\n\t\t\t\t\tend = localeMoment(schedulerData.endDate).endOf('day'),\r\n\t\t\t\t\tspecialMoment = behaviors.getScrollSpecialMomentFunc(schedulerData, start, end);\r\n\t\t\t\tif (specialMoment >= start && specialMoment <= end) {\r\n\t\t\t\t\tlet index = 0;\r\n\t\t\t\t\tschedulerData.headers.forEach((item) => {\r\n\t\t\t\t\t\tlet header = localeMoment(item.time);\r\n\t\t\t\t\t\tif (specialMoment >= header)\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.schedulerContent.scrollLeft = (index - 1) * schedulerData.getContentCellWidth();\r\n\t\t\t\t\t\r\n\t\t\t\t\tschedulerData.setScrollToSpecialMoment(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {schedulerData, leftCustomHeader, rightCustomHeader} = this.props;\r\n\t\tconst {renderData, viewType, showAgenda, isEventPerspective, config} = schedulerData;\r\n\t\tconst width = schedulerData.getSchedulerWidth();\r\n\t\tconst calendarPopoverEnabled = config.calendarPopoverEnabled;\r\n\t\t\r\n\t\tlet dateLabel = schedulerData.getDateLabel();\r\n\t\tlet defaultValue = `${viewType}${showAgenda ? 1 : 0}${isEventPerspective ? 1 : 0}`;\r\n\t\tlet radioButtonList = config.views.map(item => {\r\n\t\t\treturn <RadioButton key={`${item.viewType}${item.showAgenda ? 1 : 0}${item.isEventPerspective ? 1 : 0}`}\r\n\t\t\t\t\t\t\t\tvalue={`${item.viewType}${item.showAgenda ? 1 : 0}${item.isEventPerspective ? 1 : 0}`}><span\r\n\t\t\t\tstyle={{margin: \"0px 8px\"}}>{item.viewName}</span></RadioButton>\r\n\t\t})\r\n\t\t\r\n\t\tlet tbodyContent = <tr/>;\r\n\t\t\r\n\t\tlet resourceTableWidth = schedulerData.getResourceTableWidth();\r\n\t\tlet schedulerContainerWidth = width - resourceTableWidth + 1;\r\n\t\tlet schedulerWidth = schedulerData.getContentTableWidth() - 1;\r\n\t\tlet DndResourceEvents = this.state.dndContext.getDropTarget();\r\n\t\tlet eventDndSource = this.state.dndContext.getDndSource();\r\n\t\t\r\n\t\tlet displayRenderData = renderData.filter(o => o.render);\r\n\t\tlet resourceEventsList = displayRenderData.map((item) => {\r\n\t\t\treturn <DndResourceEvents\r\n\t\t\t\t{...this.props}\r\n\t\t\t\tkey={item.slotId}\r\n\t\t\t\tresourceEvents={item}\r\n\t\t\t\tdndSource={eventDndSource}\r\n\t\t\t/>\r\n\t\t});\r\n\t\t\r\n\t\tlet contentScrollbarHeight = this.state.contentScrollbarHeight,\r\n\t\t\tcontentScrollbarWidth = this.state.contentScrollbarWidth,\r\n\t\t\tresourceScrollbarHeight = this.state.resourceScrollbarHeight,\r\n\t\t\tresourceScrollbarWidth = this.state.resourceScrollbarWidth,\r\n\t\t\tcontentHeight = this.state.contentHeight;\r\n\t\tlet resourcePaddingBottom = resourceScrollbarHeight === 0 ? contentScrollbarHeight : 0;\r\n\t\tlet contentPaddingBottom = contentScrollbarHeight === 0 ? resourceScrollbarHeight : 0;\r\n\t\tlet schedulerContentStyle = {\r\n\t\t\toverflow: 'auto',\r\n\t\t\tmargin: \"0px\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\tpaddingBottom: contentPaddingBottom\r\n\t\t};\r\n\t\tlet resourceContentStyle = {\r\n\t\t\toverflowX: \"auto\",\r\n\t\t\toverflowY: \"auto\",\r\n\t\t\twidth: resourceTableWidth + resourceScrollbarWidth - 2,\r\n\t\t\tmargin: `0px -${contentScrollbarWidth}px 0px 0px`\r\n\t\t};\r\n\t\tif (config.schedulerMaxHeight > 0) {\r\n\t\t\tschedulerContentStyle = {\r\n\t\t\t\t...schedulerContentStyle,\r\n\t\t\t\tmaxHeight: config.schedulerMaxHeight - config.tableHeaderHeight\r\n\t\t\t};\r\n\t\t\tresourceContentStyle = {\r\n\t\t\t\t...resourceContentStyle,\r\n\t\t\t\tmaxHeight: config.schedulerMaxHeight - config.tableHeaderHeight\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tlet resourceName = schedulerData.isEventPerspective ? config.taskName : config.resourceName;\r\n\t\ttbodyContent = (\r\n\t\t\t<tr>\r\n\t\t\t\t<td style={{width: resourceTableWidth, verticalAlign: 'top'}}>\r\n\t\t\t\t\t<div className=\"resource-view\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t\t\t\tborderBottom: \"1px solid #e9e9e9\",\r\n\t\t\t\t\t\t\theight: config.tableHeaderHeight\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\toverflowX: \"scroll\",\r\n\t\t\t\t\t\t\t\toverflowY: \"hidden\",\r\n\t\t\t\t\t\t\t\tmargin: `0px 0px -${contentScrollbarHeight}px`\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<table className=\"resource-table\">\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr style={{height: config.tableHeaderHeight}}>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"header3-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t{resourceName}\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={resourceContentStyle} ref={this.schedulerResourceRef}\r\n\t\t\t\t\t\t\t onMouseOver={this.onSchedulerResourceMouseOver}\r\n\t\t\t\t\t\t\t onMouseOut={this.onSchedulerResourceMouseOut} onScroll={this.onSchedulerResourceScroll}>\r\n\t\t\t\t\t\t\t<ResourceView\r\n\t\t\t\t\t\t\t\t{...this.props}\r\n\t\t\t\t\t\t\t\tcontentScrollbarHeight={resourcePaddingBottom}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<div className=\"scheduler-view\" style={{width: schedulerContainerWidth, verticalAlign: 'top'}}>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t\t\t\tborderBottom: \"1px solid #e9e9e9\",\r\n\t\t\t\t\t\t\theight: config.tableHeaderHeight\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\toverflowX: \"scroll\",\r\n\t\t\t\t\t\t\t\toverflowY: \"hidden\",\r\n\t\t\t\t\t\t\t\tmargin: `0px 0px -${contentScrollbarHeight}px`\r\n\t\t\t\t\t\t\t}} ref={this.schedulerHeadRef} onMouseOver={this.onSchedulerHeadMouseOver}\r\n\t\t\t\t\t\t\t\t onMouseOut={this.onSchedulerHeadMouseOut} onScroll={this.onSchedulerHeadScroll}>\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tpaddingRight: `${contentScrollbarWidth}px`,\r\n\t\t\t\t\t\t\t\t\twidth: schedulerWidth + contentScrollbarWidth\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<table className=\"scheduler-bg-table\">\r\n\t\t\t\t\t\t\t\t\t\t<HeaderView {...this.props}/>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={schedulerContentStyle} ref={this.schedulerContentRef}\r\n\t\t\t\t\t\t\t onMouseOver={this.onSchedulerContentMouseOver} onMouseOut={this.onSchedulerContentMouseOut}\r\n\t\t\t\t\t\t\t onScroll={this.onSchedulerContentScroll}>\r\n\t\t\t\t\t\t\t<div style={{width: schedulerWidth, height: contentHeight}}>\r\n\t\t\t\t\t\t\t\t<div className=\"scheduler-content\">\r\n\t\t\t\t\t\t\t\t\t<table className=\"scheduler-content-table\">\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{resourceEventsList}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"scheduler-bg\">\r\n\t\t\t\t\t\t\t\t\t<table className=\"scheduler-bg-table\" style={{width: schedulerWidth}}\r\n\t\t\t\t\t\t\t\t\t\t   ref={this.schedulerContentBgTableRef}>\r\n\t\t\t\t\t\t\t\t\t\t<BodyView {...this.props}/>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t\t\r\n\t\t\r\n\t\tlet popover = <div className=\"popover-calendar\"><Calendar fullscreen={false} onSelect={this.onSelect}/></div>;\r\n\t\tlet schedulerHeader = <div/>;\r\n\t\tif (config.headerEnabled) {\r\n\t\t\tschedulerHeader = (\r\n\t\t\t\t<Row type=\"flex\" align=\"middle\" justify=\"space-between\" style={{marginBottom: '24px'}}>\r\n\t\t\t\t\t{leftCustomHeader}\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<div className='header2-text'>\r\n\t\t\t\t\t\t\t<Icon type=\"left\" style={{marginRight: \"8px\"}} className=\"icon-nav\"\r\n\t\t\t\t\t\t\t\t  onClick={this.goBack}/>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcalendarPopoverEnabled\r\n\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t<Popover content={popover} placement=\"bottom\" trigger=\"click\"\r\n\t\t\t\t\t\t\t\t\t\t\t visible={this.state.visible}\r\n\t\t\t\t\t\t\t\t\t\t\t onVisibleChange={this.handleVisibleChange}>\r\n\t\t\t\t\t\t\t\t\t\t<span className={'header2-text-label'}\r\n\t\t\t\t\t\t\t\t\t\t\t  style={{cursor: 'pointer'}}>{dateLabel}</span>\r\n\t\t\t\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t\t\t\t: <span className={'header2-text-label'}>{dateLabel}</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<Icon type=\"right\" style={{marginLeft: \"8px\"}} className=\"icon-nav\"\r\n\t\t\t\t\t\t\t\t  onClick={this.goNext}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<RadioGroup defaultValue={defaultValue} size=\"default\" onChange={this.onViewChange}>\r\n\t\t\t\t\t\t\t{radioButtonList}\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{rightCustomHeader}\r\n\t\t\t\t</Row>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<table id=\"RBS-Scheduler-root\" className=\"scheduler\" style={{width: `${width}px`}}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colSpan=\"2\">\r\n\t\t\t\t\t\t{schedulerHeader}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{tbodyContent}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n\t\r\n\tresolveScrollbarSize = () => {\r\n\t\tconst {schedulerData} = this.props;\r\n\t\tlet contentScrollbarHeight = 17,\r\n\t\t\tcontentScrollbarWidth = 17,\r\n\t\t\tresourceScrollbarHeight = 17,\r\n\t\t\tresourceScrollbarWidth = 17,\r\n\t\t\tcontentHeight = schedulerData.getSchedulerContentDesiredHeight();\r\n\t\tif (!!this.schedulerContent) {\r\n\t\t\tcontentScrollbarHeight = this.schedulerContent.offsetHeight - this.schedulerContent.clientHeight;\r\n\t\t\tcontentScrollbarWidth = this.schedulerContent.offsetWidth - this.schedulerContent.clientWidth;\r\n\t\t}\r\n\t\tif (!!this.schedulerResource) {\r\n\t\t\tresourceScrollbarHeight = this.schedulerResource.offsetHeight - this.schedulerResource.clientHeight;\r\n\t\t\tresourceScrollbarWidth = this.schedulerResource.offsetWidth - this.schedulerResource.clientWidth;\r\n\t\t}\r\n\t\tif (!!this.schedulerContentBgTable && !!this.schedulerContentBgTable.offsetHeight) {\r\n\t\t\tcontentHeight = this.schedulerContentBgTable.offsetHeight;\r\n\t\t}\r\n\t\t\r\n\t\tlet tmpState = {};\r\n\t\tlet needSet = false;\r\n\t\tif (contentScrollbarHeight != this.state.contentScrollbarHeight) {\r\n\t\t\ttmpState = {...tmpState, contentScrollbarHeight: contentScrollbarHeight};\r\n\t\t\tneedSet = true;\r\n\t\t}\r\n\t\tif (contentScrollbarWidth != this.state.contentScrollbarWidth) {\r\n\t\t\ttmpState = {...tmpState, contentScrollbarWidth: contentScrollbarWidth};\r\n\t\t\tneedSet = true;\r\n\t\t}\r\n\t\tif (contentHeight != this.state.contentHeight) {\r\n\t\t\ttmpState = {...tmpState, contentHeight: contentHeight};\r\n\t\t\tneedSet = true;\r\n\t\t}\r\n\t\tif (resourceScrollbarHeight != this.state.resourceScrollbarHeight) {\r\n\t\t\ttmpState = {...tmpState, resourceScrollbarHeight: resourceScrollbarHeight};\r\n\t\t\tneedSet = true;\r\n\t\t}\r\n\t\tif (resourceScrollbarWidth != this.state.resourceScrollbarWidth) {\r\n\t\t\ttmpState = {...tmpState, resourceScrollbarWidth: resourceScrollbarWidth};\r\n\t\t\tneedSet = true;\r\n\t\t}\r\n\t\tif (needSet)\r\n\t\t\tthis.setState(tmpState);\r\n\t}\r\n\t\r\n\tschedulerHeadRef = (element) => {\r\n\t\tthis.schedulerHead = element;\r\n\t}\r\n\t\r\n\tonSchedulerHeadMouseOver = () => {\r\n\t\tthis.currentArea = 2;\r\n\t}\r\n\t\r\n\tonSchedulerHeadMouseOut = () => {\r\n\t\tthis.currentArea = -1;\r\n\t}\r\n\t\r\n\tonSchedulerHeadScroll = (proxy, event) => {\r\n\t\tif ((this.currentArea === 2 || this.currentArea === -1) && this.schedulerContent.scrollLeft != this.schedulerHead.scrollLeft)\r\n\t\t\tthis.schedulerContent.scrollLeft = this.schedulerHead.scrollLeft;\r\n\t}\r\n\t\r\n\tschedulerResourceRef = (element) => {\r\n\t\tthis.schedulerResource = element;\r\n\t}\r\n\t\r\n\tonSchedulerResourceMouseOver = () => {\r\n\t\tthis.currentArea = 1;\r\n\t}\r\n\t\r\n\tonSchedulerResourceMouseOut = () => {\r\n\t\tthis.currentArea = -1;\r\n\t}\r\n\t\r\n\tonSchedulerResourceScroll = (proxy, event) => {\r\n\t\tif ((this.currentArea === 1 || this.currentArea === -1) && this.schedulerContent.scrollTop != this.schedulerResource.scrollTop)\r\n\t\t\tthis.schedulerContent.scrollTop = this.schedulerResource.scrollTop;\r\n\t}\r\n\t\r\n\tschedulerContentRef = (element) => {\r\n\t\tthis.schedulerContent = element;\r\n\t}\r\n\t\r\n\tschedulerContentBgTableRef = (element) => {\r\n\t\tthis.schedulerContentBgTable = element;\r\n\t}\r\n\t\r\n\tonSchedulerContentMouseOver = () => {\r\n\t\tthis.currentArea = 0;\r\n\t}\r\n\t\r\n\tonSchedulerContentMouseOut = () => {\r\n\t\tthis.currentArea = -1;\r\n\t}\r\n\t\r\n\tonSchedulerContentScroll = (proxy, event) => {\r\n\t\tif (this.currentArea === 0 || this.currentArea === -1) {\r\n\t\t\tif (this.schedulerHead.scrollLeft != this.schedulerContent.scrollLeft)\r\n\t\t\t\tthis.schedulerHead.scrollLeft = this.schedulerContent.scrollLeft;\r\n\t\t\tif (this.schedulerResource.scrollTop != this.schedulerContent.scrollTop)\r\n\t\t\t\tthis.schedulerResource.scrollTop = this.schedulerContent.scrollTop;\r\n\t\t}\r\n\t\t\r\n\t\tconst {schedulerData, onScrollLeft, onScrollRight, onScrollTop, onScrollBottom} = this.props;\r\n\t\tconst {scrollLeft, scrollTop} = this.state;\r\n\t\tif (this.schedulerContent.scrollLeft !== scrollLeft) {\r\n\t\t\tif (this.schedulerContent.scrollLeft === 0 && onScrollLeft != undefined) {\r\n\t\t\t\tonScrollLeft(schedulerData, this.schedulerContent, this.schedulerContent.scrollWidth - this.schedulerContent.clientWidth);\r\n\t\t\t}\r\n\t\t\tif (this.schedulerContent.scrollLeft === this.schedulerContent.scrollWidth - this.schedulerContent.clientWidth && onScrollRight != undefined) {\r\n\t\t\t\tonScrollRight(schedulerData, this.schedulerContent, this.schedulerContent.scrollWidth - this.schedulerContent.clientWidth);\r\n\t\t\t}\r\n\t\t} else if (this.schedulerContent.scrollTop !== scrollTop) {\r\n\t\t\tif (this.schedulerContent.scrollTop === 0 && onScrollTop != undefined) {\r\n\t\t\t\tonScrollTop(schedulerData, this.schedulerContent, this.schedulerContent.scrollHeight - this.schedulerContent.clientHeight);\r\n\t\t\t}\r\n\t\t\tif (this.schedulerContent.scrollTop === this.schedulerContent.scrollHeight - this.schedulerContent.clientHeight && onScrollBottom != undefined) {\r\n\t\t\t\tonScrollBottom(schedulerData, this.schedulerContent, this.schedulerContent.scrollHeight - this.schedulerContent.clientHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tscrollLeft: this.schedulerContent.scrollLeft,\r\n\t\t\tscrollTop: this.schedulerContent.scrollTop\r\n\t\t});\r\n\t}\r\n\t\r\n\tonViewChange = (e) => {\r\n\t\tconst {onViewChange, schedulerData} = this.props;\r\n\t\tlet viewType = parseInt(e.target.value.charAt(0));\r\n\t\tlet showAgenda = e.target.value.charAt(1) === '1';\r\n\t\tlet isEventPerspective = e.target.value.charAt(2) === '1';\r\n\t\tonViewChange(schedulerData, {\r\n\t\t\tviewType: viewType,\r\n\t\t\tshowAgenda: showAgenda,\r\n\t\t\tisEventPerspective: isEventPerspective\r\n\t\t});\r\n\t}\r\n\t\r\n\tgoNext = () => {\r\n\t\tconst {nextClick, schedulerData} = this.props;\r\n\t\tnextClick(schedulerData);\r\n\t}\r\n\t\r\n\tgoBack = () => {\r\n\t\tconst {prevClick, schedulerData} = this.props;\r\n\t\tprevClick(schedulerData);\r\n\t}\r\n\t\r\n\thandleVisibleChange = (visible) => {\r\n\t\tthis.setState({visible});\r\n\t}\r\n\t\r\n\tonSelect = (date) => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: false,\r\n\t\t});\r\n\t\t\r\n\t\tconst {onSelectDate, schedulerData} = this.props;\r\n\t\tonSelectDate(schedulerData, date);\r\n\t}\r\n}\r\n\r\nexport const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const DATETIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\r\nexport {SchedulerData, CalendarTypes, CellUnits, DnDSource, DnDContext, AddMorePopover, DemoData}\r\nexport default Scheduler\r\n","import {DragDropContext} from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\n\r\nexport default DragDropContext(HTML5Backend);","import React, {Component} from 'react'\r\nimport Scheduler, {SchedulerData, CalendarTypes, DATE_FORMAT, DemoData} from './components/Scheduler/Scheduler'\r\nimport withDragDropContext from './components/Events/withDnDContext'\r\nimport './App.css'\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //let schedulerData = new SchedulerData(new moment(\"2017-12-18\").format(DATE_FORMAT), CalendarTypes.Week);\r\n        let schedulerData = new SchedulerData('2019-12-18', CalendarTypes.Day);\r\n        schedulerData.localeMoment.locale('en');\r\n        schedulerData.setResources(DemoData.resources);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.state = {\r\n            viewModel: schedulerData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {viewModel} = this.state;\r\n        return (\r\n            <div>\r\n                <p style={{'paddingLeft': '20px','fontWeight': 'bold'}}>Instructions</p>\r\n                <ul>\r\n                    <li>Events can be moved around, by dragging them horizontally</li>\r\n                    <li>Resize events, by dragging them at the left/right rounded edges</li>\r\n                    <li>Click on an empty calendar cell to create a new event</li>\r\n                </ul>\r\n                <div>\r\n                  \r\n                    <Scheduler schedulerData={viewModel}\r\n                               prevClick={this.prevClick}\r\n                               nextClick={this.nextClick}\r\n                               onSelectDate={this.onSelectDate}\r\n                               onViewChange={this.onViewChange}\r\n                               viewEventText=\"Ops 1\"\r\n                               viewEvent2Text=\"Ops 2\"\r\n                               updateEventStart={this.updateEventStart}\r\n                               updateEventEnd={this.updateEventEnd}\r\n                               moveEvent={this.moveEvent}\r\n                               newEvent={this.newEvent}\r\n                               onScrollLeft={this.onScrollLeft}\r\n                               onScrollRight={this.onScrollRight}\r\n                               onScrollTop={this.onScrollTop}\r\n                               onScrollBottom={this.onScrollBottom}\r\n                               toggleExpandFunc={this.toggleExpandFunc}\r\n                    />\r\n                </div>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n    prevClick = (schedulerData)=> {\r\n        schedulerData.prev();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    nextClick = (schedulerData)=> {\r\n        schedulerData.next();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onViewChange = (schedulerData, view) => {\r\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onSelectDate = (schedulerData, date) => {\r\n        schedulerData.setDate(date);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\r\n           let newFreshId = 0;\r\n            schedulerData.events.forEach((item) => {\r\n                if(item.id >= newFreshId)\r\n                    newFreshId = item.id + 1;\r\n            });\r\n\r\n            let newEvent = {\r\n                id: newFreshId,\r\n                title: 'New event you just created',\r\n                start: start,\r\n                end: end,\r\n                resourceId: slotId,\r\n                bgColor: 'purple'\r\n            }\r\n            schedulerData.addEvent(newEvent);\r\n            this.setState({\r\n                viewModel: schedulerData\r\n            })\r\n        \r\n    }\r\n\r\n    updateEventStart = (schedulerData, event, newStart) => {\r\n      \r\n            schedulerData.updateEventStart(event, newStart);\r\n      \r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    updateEventEnd = (schedulerData, event, newEnd) => {\r\n        \r\n            schedulerData.updateEventEnd(event, newEnd);\r\n        \r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\r\n            schedulerData.moveEvent(event, slotId, slotName, start, end);\r\n            this.setState({\r\n                viewModel: schedulerData\r\n            })\r\n        \r\n    }\r\n\r\n    onScrollRight = (schedulerData, schedulerContent, maxScrollLeft) => {\r\n        if(schedulerData.ViewTypes === CalendarTypes.Day) {\r\n            schedulerData.next();\r\n            schedulerData.setEvents(DemoData.events);\r\n            this.setState({\r\n                viewModel: schedulerData\r\n            });\r\n    \r\n            schedulerContent.scrollLeft = maxScrollLeft - 10;\r\n        }\r\n    }\r\n\r\n    onScrollLeft = (schedulerData, schedulerContent, maxScrollLeft) => {\r\n        if(schedulerData.ViewTypes === CalendarTypes.Day) {\r\n            schedulerData.prev();\r\n            schedulerData.setEvents(DemoData.events);\r\n            this.setState({\r\n                viewModel: schedulerData\r\n            });\r\n\r\n            schedulerContent.scrollLeft = 10;\r\n        }\r\n    }\r\n\r\n    onScrollTop = (schedulerData, schedulerContent, maxScrollTop) => {\r\n        console.log('onScrollTop');\r\n    }\r\n\r\n    onScrollBottom = (schedulerData, schedulerContent, maxScrollTop) => {\r\n        console.log('onScrollBottom');\r\n    }\r\n\r\n    toggleExpandFunc = (schedulerData, slotId) => {\r\n        schedulerData.toggleExpandStatus(slotId);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        });\r\n    }\r\n}\r\n\r\nexport default withDragDropContext(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. Index is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}